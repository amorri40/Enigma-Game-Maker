/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

namespace enigma
{
  event_iter *event_animationend; // Defined in 1 objects
  event_iter *event_collision; // Defined in 1 objects
  event_iter *event_create; // Defined in 3 objects
  event_iter *event_destroy; // Defined in 1 objects
  event_iter *event_draw; // Defined in 1 objects
  event_iter *event_mouseunknown; // Defined in 1 objects
  event_iter *event_outsideroom; // Defined in 1 objects
  event_iter *event_step; // Defined in 2 objects
  int event_system_initialize()
  {
    events = new event_iter[8]; // Allocated here; not really meant to change.
    objects = new objectid_base[5]; // Allocated here; not really meant to change.
    event_animationend = events + 0;  event_animationend->name = "Animation End";
    event_collision = events + 1;  event_collision->name = "obj_3";
    event_create = events + 2;  event_create->name = "Create";
    event_destroy = events + 3;  event_destroy->name = "Destroy";
    event_draw = events + 4;  event_draw->name = "Draw";
    event_mouseunknown = events + 5;  event_mouseunknown->name = "Mouse Unknown (old? LGM doesn't even know!)";
    event_outsideroom = events + 6;  event_outsideroom->name = "Outside Room";
    event_step = events + 7;  event_step->name = "Step";
    return 0;
  }
  int ENIGMA_events()
  {
    for (instance_event_iterator = event_mouseunknown->next; instance_event_iterator != NULL; instance_event_iterator = instance_event_iterator->next)
      ((enigma::event_parent*)(instance_event_iterator->inst))->myevent_mouseunknown();
    
    enigma::update_globals();
    
    for (instance_event_iterator = event_step->next; instance_event_iterator != NULL; instance_event_iterator = instance_event_iterator->next)
      ((enigma::event_parent*)(instance_event_iterator->inst))->myevent_step();
    
    enigma::update_globals();
    
    for (instance_event_iterator = event_outsideroom->next; instance_event_iterator != NULL; instance_event_iterator = instance_event_iterator->next)
      ((enigma::event_parent*)(instance_event_iterator->inst))->myevent_outsideroom();
    
    enigma::update_globals();
    
    for (instance_event_iterator = event_collision->next; instance_event_iterator != NULL; instance_event_iterator = instance_event_iterator->next)
      ((enigma::event_parent*)(instance_event_iterator->inst))->myevent_collision();
    
    enigma::update_globals();
    
    screen_redraw(); screen_refresh();    
    
    enigma::update_globals();
    
    for (instance_event_iterator = event_animationend->next; instance_event_iterator != NULL; instance_event_iterator = instance_event_iterator->next)
      ((enigma::event_parent*)(instance_event_iterator->inst))->myevent_animationend();
    
    enigma::update_globals();
    
    enigma::dispose_destroyed_instances();
    enigma::sleep_for_framerate(room_speed);
    
    return 0;
  } // event function
} // namespace enigma
