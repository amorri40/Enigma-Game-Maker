/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

variant enigma::OBJ_treebutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_treebutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(planttreeD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treebutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(treegrower, 496, 240);
    
  }
  action_sound(whizz, 0);
  areallbuttonsgone += 1;
  action_sound(blam, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_treebutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(planttreeD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treebutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(planttreeD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treebutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(planttreeD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(shakeenigmainearthD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thelightnenigmainfire, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(lightnenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(lightnenigmainD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(lightnenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(raenigmainagroundD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(raenigmaincreator, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(blam, 0);
  action_sound(whizz, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(raenigmainagroundD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(shakeenigmainearthD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(theearthshakes, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(shakeenigmainearthD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(shakeenigmainearthD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_earthquakebutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(shakeenigmainearthD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    with(meteorstrikeD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themeteorcreate, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;

  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  gonowman = 2;
  with(meteorstrikeD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(meteorstrikeD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_asteroidbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(meteorstrikeD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(scorchearthD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(scorchenigmaenigmaintheearth, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(shakeenigmainearthD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(scorchearthD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(scorchearthD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(andrabbitsD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(rabbitcreates, 496, 400);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(drawtherabbitiq, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  rabbitIQcountdown = 0;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(andrabbitsD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(andrabbitsD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(andrabbitsD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(wenigmaindisblowenigmainD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(wenigmaindyearthcreate, 496, 240);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  if(action_if_number(drawBCage, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(EndofTURNBC, 0, 0);
      
    }
    
  }
  if(action_if_number(draw1ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(EndofTURNAD1, 0, 0);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(wenigmaindisblowenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(wenigmaindisblowenigmainD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(wenigmaindisblowenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(manishereD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNBC, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(mancreates, 100, 100);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(drawthehumaniq, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(manishereD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(manishereD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(manishereD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1donothenigmaingatall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1donothenigmaingatall::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1donothenigmaingatall::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(donothenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1donothenigmaingatall::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(donothenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  therabbitiq += 23;
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_1donothenigmaingatall)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(dosomethenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_holdfordivenigmaine::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(noenigmainfoD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_holdfordivenigmaine::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(noenigmainfoD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themountaenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  itsnowacavehome = 0;
  mountaincheck += 1;
  if(action_if_number(___75pts, 0, 0))
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themountaenigmain::myevent_collision_70()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,70)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
if(action_if_variable(itsnowacavehome, 0, 0))
  {
    action_change_object(thevolcanofrmmtn, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themountaenigmain::myevent_collision_119()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,119)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
itsnowacavehome = 1;
  action_set_sprite(Smnthome, 1);
  if(! action_if_number(_DONTUSENUMBERS_100bluepts, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_100bluepts, 50, 50);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelakecrator::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  lakecheck += 1;
  if(action_if_number(themanofearth, 0, 0))
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_600pts, 0, 0);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_barpurplechanged::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(Gurglysound, 1);
  
  return 0;
}

variant enigma::OBJ_barpurplechanged::myevent_keypress_27()
{
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  if(action_if_question("WARNING: qutting the game now before you reach the checklist erases any data up to enigmathis point.\n \nYour loaded game will continue from the last checklist. \n \nQuit the game?")
    )
  {
    action_end_game();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_barpurplechanged::myevent_keypress_75()
{
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  if(action_if_number(MUSICkillerKkey, 0, 0))
  {
    if(action_if_question("Kill all the music enigmain the game? This function is irreversable once a save takes place.")
      )
    {
      
      {
        argument_relative = 0;
        action_create_object(MUSICkillerKkey, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_humaniqbox::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  thehumaniq = 60;
  
  return 0;
}

variant enigma::OBJ_rankofgodbox::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  rankofgod = 10;
  
  return 0;
}

variant enigma::OBJ_rabbitiqbox::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  therabbitiq = 12;
  
  return 0;
}

variant enigma::OBJ_Xednouse::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  image_speed = 0.02;
  areallbuttonsgone += 1;
  
  return 0;
}

variant enigma::OBJ_Xednouse::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Xednouse::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
if(action_if_number(youhaventevoD, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(youhaventevoD, 0, 0);
      
    }
    
  }
  action_set_sprite(XlightS, 1);
  
  return 0;
}

variant enigma::OBJ_Xednouse::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(darkgrayXedS, 1);
  with(youhaventevoD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_logoenigmaenigmaintro::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(Sommerstitle, 1);
  
  return 0;
}

variant enigma::OBJ_hiscoreB::myevent_leftbutton()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_highscore_show(backhighscoress, 0, 0xFF0000, 0xFFFFFF, Arial, 10, 16777215, 1, 1, 0, 0);
  
  return 0;
}

variant enigma::OBJ_hiscoreB::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(hiscoreS, 1);
  
  return 0;
}

variant enigma::OBJ_hiscoreB::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(hiscoreSH, 1);
  
  return 0;
}

variant enigma::OBJ_hiscoreB::myevent_keypress_27()
{
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  if(action_if_question("Quit the game? Are you sure?")
    )
  {
    action_message("Thanks for playing! For more great enigmafree games, visit our site at www.vertigogaming.net!");
    action_end_game();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmanewgameB::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  action_sound(Sommerstitle, 1);
  
  return 0;
}

variant enigma::OBJ_enigmanewgameB::myevent_leftbutton()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
if(action_if_question("WARNING: Starting a enigmanew game will erase any previously saved game...are you sure?")
    )
  {
    action_end_sound(Sommerstitle);
    action_another_room(startenigmaingenigmanewgameroom, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmanewgameB::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(enigmanewgameS, 1);
  
  return 0;
}

variant enigma::OBJ_enigmanewgameB::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(enigmanewgameSH, 1);
  
  return 0;
}

variant enigma::OBJ_HelpboxFIRST::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HelpboxFIRST::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_theroundsofgod(int(self)), 0, 0))
  {
    
    {
      
      {
        message_background(backboxspriteB);
        message_button(purpleboxSSS);
        message_position(25, 25);
        message_text_font("Arial", 7, c_white, enigma::varaccess_fs_bold(int(self)));
        message_button_font("Arial", 8, c_white, enigma::varaccess_fs_bold(int(self)));
        
      }
      
    }
    action_message("Welcome to the Sandbox of god. For helpful tips and strategy, click on the questionmark bubble!");
    with(holdquestionslater)
    {
      action_change_object(startenigmaingthegame, 1);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_youhaventevoD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(youhaventevoD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_youhaventevoD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("You have ! evolved properly to use enigmathis item...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_dosomethenigmaing::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(dosomethenigmaing, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_dosomethenigmaing::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 1, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Divine Intervention- answer them.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manishereD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(manishereD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manishereD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 12632256, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Bring MAN upon the earth.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindisblowenigmainD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(wenigmaindisblowenigmainD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindisblowenigmainD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Blow WIND into the sky & plains.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchearthD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(scorchearthD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchearthD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("SCORCH the earth into a barren land.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_planttreeD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(planttreeD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_planttreeD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Plant TREE seeds into the fertile ground.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_shakeenigmainearthD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(shakeenigmainearthD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_shakeenigmainearthD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Create an EARTHQUAKE to befall the lands.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(lightnenigmainD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Strike the ground with your godly THUNDER.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainagroundD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(raenigmainagroundD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmainagroundD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16776960, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Soften and feed the lands with RAIN from above.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_andrabbitsD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(andrabbitsD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_andrabbitsD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16711935, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Give the lands a helping of RABBITS.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_meteorstrikeD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(meteorstrikeD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_meteorstrikeD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Strike the earth with a METEOR.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_holdquestionslater::myevent_keypress_84()
{
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_startenigmaingthegame::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(575, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_startenigmaingthegame::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_startenigmaingthegame::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("The icons listed on the top right of your screen is your COMMANDS. You can only use these commands once. You can command it to rain, or drought, etc. Doing commands enigmain different orders each enigmatime you play yields incredibly different results. \n \nThe lower portion of your screen contains helpful info on whats going on, what IQ your species are, and what rank you currently stand. There are 10 ranks. \n \nThere are also 7 eras, from 1,000,000 BC to 2100 AD.");
  action_change_object(objective, 1);
  
  return 0;
}

variant enigma::OBJ_startenigmaingthegame::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_ahelpfultipD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(15, 0);
    
  }
  if(action_if_number(ahelpfultipD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ahelpfultipD::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_ahelpfultipD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 12632256, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("You have recieved a helpful TIP! Click to read it.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_objective::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(575, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_objective::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_objective::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("The objective of the game is to lead humans into evolution and get a high score. Depending on what godly command you use first and enigmain what order, you can create a peaceful earth- or a war-torn savaged people. Use your brains! \n \nTo turn off these helpful tips at any enigmatime , press the T key to toggle help on or off.");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_objective::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_scorecaption::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_score(0, 0, "Score: ");
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_drawtherank::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 18, 8388736, 0, 0, 0, 0);
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 10, 0))
  {
    with(rankofgodbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_rankofgod(int(self)), 3, 7);
        
      }
      
    }
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 10, 1))
  {
    with(rankofgodbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_rankofgod(int(self)), 12, 7);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_drawBCage::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("1,000,000 years B.C.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particleoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  if(action_if_dice(2))
  {
    if(action_if_dice(2))
    {
      action_set_sprite(blueparticle, 1);
      
    }
    else
    {
      action_set_sprite(ornageparticle, 1);
      
    }
    
  }
  else
  {
    if(action_if_dice(2))
    {
      action_set_sprite(greenparticle, 1);
      
    }
    else
    {
      action_set_sprite(redparticle, 1);
      
    }
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particleoffury::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_dice(2))
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(0, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(90, 0.25);
        
      }
      
    }
    
  }
  else
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(180, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(270, 0.25);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particleoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_sparkoflights::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_theearthshakes::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(earthquake, 1);
  
  {
    argument_relative = 0;
    action_set_alarm(180, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theearthshakes::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_number(GROUNDismushy, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(thehugecrack, 0, 188);
      
    }
    
  }
  action_end_sound(earthquake);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_theearthshakes::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("SHAKING THE EARTH...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thehugecrack::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(blam, 0);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_500pts, 150, 70);
    
  }
  image_speed = 0.5;
  canyoncheck += 1;
  
  return 0;
}

variant enigma::OBJ_thehugecrack::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_set_sprite(Scrack, 1);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_500pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(dodododa, 0);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_500pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_500pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_500pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(2);
    
  }
  scorestop += 2;
  if(action_if_variable(scorestop, 498, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_500pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("500", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_greenparticleoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_greenparticleoffury::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_dice(2))
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(0, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(90, 0.25);
        
      }
      
    }
    
  }
  else
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(180, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(270, 0.25);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_greenparticleoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_meteorfall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(comet, 0);
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 25, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_meteorfall::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(2, 0);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballenigmaenigmaintosmk, 45, 20);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballenigmaenigmaintosmk, 80, 65);
      
    }
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballenigmaenigmaintosmk, 55, 25);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballenigmaenigmaintosmk, 75, 55);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_meteorfall::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(enigma::glaccess(int(followmecomet))-> x, enigma::glaccess(int(followmecomet))-> y, 6, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_meteorfall::myevent_collision_54()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,54)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
if(action_if_number(GROUNDisdry, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(sparkoflights, - 170, - 150);
      
    }
    action_sound(blam, 0);
    action_kill_object();
    
  }
  if(action_if_number(GROUNDisregular, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(sparkoflights, - 170, - 150);
      
    }
    action_sound(blam, 0);
    action_change_object(thecrator, 1);
    
  }
  if(action_if_number(GROUNDismushy, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(sparkoflights, - 170, - 150);
      
    }
    action_sound(blam, 0);
    action_change_object(groundedcomet, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fireballenigmaenigmaintosmk::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(2))
  {
    image_speed = 0.66;
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(3, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fireballenigmaenigmaintosmk::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(orangeparticleoffury, 10, 10);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fireballenigmaenigmaintosmk::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_change_object(smokeafter, 1);
  
  return 0;
}

variant enigma::OBJ_smokeafter::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(2))
  {
    image_speed = 0.5;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_smokeafter::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_groundedcomet::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_600pts, 0, 0);
    
  }
  comettomountain = 0;
  
  {
    argument_relative = 0;
    action_set_alarm(75, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_groundedcomet::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(75, 0);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_comettomountain(int(self)), 2, 2))
  {
    action_change_object(themountaenigmain, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MOVEbuttonsAWAY::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MOVEbuttonsAWAY::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_MOVEbuttonsBACK::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MOVEbuttonsBACK::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(draw1ad, 0, 2))
  {
    action_change_object(EndofTURNAD1, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 7);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_end_sound(sizzly);
  if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(sizzly);
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(treegrower, 0, 2))
  {
    with(thebunnyofearth)
    {
      action_change_object(thebunnyeatstrees, 1);
      
    }
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    with(thebunnyofearth)
    {
      action_change_object(thebunnyhasahome, 1);
      
    }
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_rabbitIQcountdown(int(self)), 2, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(HOLDEVERYTHING, 0, 0);
      
    }
    
    {
      argument_relative = 0;
      action_create_object(_DONTUSENUMBERS_1BCrabbitswantIQ, 0, 0);
      
    }
    action_kill_object();
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_whenbluescoregoes(int(self)), 0, 2))
  {
    with(VARIABLESofgod)
      if(action_if_variable(enigma::varaccess_whenbluescoregoes(int(self)), 20, 1))
    {
      with(holdquestionslater)
      {
        action_change_object(whatsbluescore, 1);
        
      }
      enigma::varaccess_whenbluescoregoes(int(self))= 100;
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
if(action_if_number(themountaenigmain, 0, 2))
  {
    with(themanofearth)
    {
      action_change_object(manwalkstomountaenigmain, 1);
      
    }
    
  }
  if(action_if_number(thebunnyofearth, 0, 2))
  {
    if(action_if_number(cracktoriver, 0, 0))
      if(action_if_number(thehugecrack, 0, 0))
        with(themanofearth)
    {
      action_change_object(manwalkstobunny, 1);
      
    }
    
  }
  if(action_if_number(thebunnyofearth, 0, 2))
  {
    if(action_if_number(thebunnyofearth, 3, 1))
      with(themanofearth)
    {
      action_change_object(manwalkstobunny, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  comettomountain += 1;
  treevariable += 1;
  if(action_if_number(Fthebunnystayhome, 0, 2))
  {
    rabbitIQcountdown += 1;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNBC::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_600pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_600pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_600pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_600pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(2);
    
  }
  scorestop += 2;
  if(action_if_variable(scorestop, 598, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_600pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("600", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmarandomraenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_move_random(0, 0);
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 0;
      action_move("100000000", 12.5);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_move("100000000", 10);
      
    }
    
  }
  if(action_if_dice(2))
  {
    if(action_if_dice(2))
      action_set_sprite(raenigmain1S, 1);
    else action_set_sprite(raenigmain2S, 1);
    
  }
  else
  {
    if(action_if_dice(2))
      action_set_sprite(raenigmain3S, 1);
    else action_set_sprite(raenigmain4S, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmarandomraenigmain::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_raenigmaincreator::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(2, 0);
    
  }
  action_sound(raenigmain, 1);
  
  {
    argument_relative = 0;
    action_set_alarm(450, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmaincreator::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(2, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(enigmarandomraenigmain, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmaincreator::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
hasitrainedyet = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  action_end_sound(raenigmain);
  with(treegrower)
  {
    action_change_object(treesofglory, 1);
    
  }
  with(thecrator)
  {
    action_change_object(thelakecrator, 1);
    
  }
  with(thehugecrack)
  {
    action_change_object(cracktoriver, 1);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  with(EndofTURNBC)
  {
    action_kill_object();
    
  }
  with(EndofTURNAD500)
  {
    action_kill_object();
    
  }
  if(action_if_number(GROUNDisregular, 0, 2))
  {
    with(GROUNDisregular)
    {
      action_change_object(GROUNDismushy, 1);
      
    }
    action_kill_object();
    
  }
  if(action_if_number(GROUNDisdry, 0, 2))
  {
    with(GROUNDisdry)
    {
      action_change_object(GROUNDisregular, 1);
      
    }
    action_kill_object();
    
  }
  if(action_if_number(GROUNDismushy, 0, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_GROUNDismushy::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 8388608, 0, 1, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Ground: mushy", 400, 448);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_GROUNDisregular::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 32768, 0, 1, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Ground: normal", 400, 448);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_GROUNDisdry::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 128, 0, 1, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Ground: hard", 400, 448);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_cracktoriver::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_500pts, 100, 100);
    
  }
  rivercheck += 1;
  
  return 0;
}

variant enigma::OBJ_thecrator::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  cratorcheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_500pts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_700pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_700pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_700pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_700pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(2);
    
  }
  scorestop += 2;
  if(action_if_variable(scorestop, 698, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_700pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("700", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainblam::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 335);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 25, 335);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 335);
    
  }
  image_speed = 0.5;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainblam::myevent_collision_284()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,284)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 179, 2))
  {
    with(VARIABLESofgod)
      if(action_if_variable(enigma::varaccess_lightthevillage(int(self)), 0, 0))
    {
      enigma::varaccess_lightthevillage(int(self))+= 1;
      
      {
        argument_relative = 0;
        action_create_object(humanflashquick, 520, 440);
        
      }
      enigma::varaccess_thehumaniq(int(self))+= 25;
      action_message("Lighting is about to strike the tower...Man suddenly realizes the power of ELECTRICITY! Bonus IQ points awarded!");
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainblam::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_sound(thundersmall, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thelightnenigmainfire::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelightnenigmainfire::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(lightnenigmainblam, 335, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(125, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelightnenigmainfire::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(lightnenigmainblam, 80, - 75);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_orangeparticleoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(orangeparticleoffury, 50, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(270, 0.1);
    
  }
  
  {
    argument_relative = 0;
    action_move("111111111", 3.5);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_orangeparticleoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 49, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("50", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themeteorcreate::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(125, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themeteorcreate::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(meteorfall, 640, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_scorchenigmaenigmaintheearth::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(sizzly, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchenigmaenigmaintheearth::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(85, 1);
    
  }
  if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(thebubblenigmainvolcano, 1);
      
    }
    
  }
  if(action_if_number(GROUNDisregular, 0, 2))
  {
    with(GROUNDisregular)
    {
      action_change_object(GROUNDisdry, 1);
      
    }
    
  }
  if(action_if_number(GROUNDismushy, 0, 2))
  {
    with(GROUNDismushy)
    {
      action_change_object(GROUNDisregular, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchenigmaenigmaintheearth::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_scorchenigmaenigmaintheearth::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("SCORCHING THE EARTH...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(3))
  {
    
    {
      argument_relative = 0;
      action_set_alarm(3600, 2);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_set_alarm(3600, 0);
      
    }
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(2))
    {
      action_sound(Oceantess, 0);
      
    }
    else
    {
      action_sound(Goodasitgets, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3600, 1);
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(2))
    {
      action_sound(Jungleloon, 0);
      
    }
    else
    {
      action_sound(Beautiful1, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3600, 2);
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(3))
    {
      action_sound(MDKmax, 0);
      
    }
    else
    {
      action_sound(Sommerswork, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3600, 3);
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(2))
    {
      action_sound(Beautiful2, 0);
      
    }
    else
    {
      action_sound(Beautiful3, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3600, 4);
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(2))
    {
      action_sound(Oceantess, 0);
      
    }
    else
    {
      action_sound(Goodasitgets, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3600, 0);
    
  }
  if(! action_if_sound(MDKmax))
  {
    if(action_if_dice(2))
    {
      action_sound(Dayafter2, 0);
      
    }
    else
    {
      action_sound(Evolution2, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicenigmarandomizer::myevent_keypress_74()
{
  action_sound(Sommersecret, 0);
  action_end_sound(Sommerstitle);
  action_end_sound(Evolution2);
  action_end_sound(Beautiful1);
  action_end_sound(Goodasitgets);
  action_end_sound(Beautiful2);
  action_end_sound(Jungleloon);
  action_end_sound(Beautiful3);
  action_end_sound(Oceantess);
  action_end_sound(MDKmax);
  action_end_sound(Sommerswork);
  action_end_sound(Dayafter2);
  
  return 0;
}

variant enigma::OBJ_treegrower::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  treevariable =- 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100pts, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treegrower::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_hasitrainedyet(int(self)), 1, 0))
  {
    
    {
      argument_relative = 1;
      action_create_object(treesofglory, - 15, - 15);
      
    }
    action_kill_object();
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_treevariable(int(self)), 1, 0))
  {
    action_set_sprite(SseedkenigmaingY, 1);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_treevariable(int(self)), 2, 0))
  {
    action_set_sprite(SseedlenigmaingOr, 1);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_treevariable(int(self)), 3, 0))
  {
    action_set_sprite(SseedlenigmaingR, 1);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_treevariable(int(self)), 4, 0))
  {
    
    {
      argument_relative = 1;
      action_create_object(___200pts, 0, 0);
      
    }
    
    {
      argument_relative = 1;
      action_create_object(fireballenigmaenigmaintosmk, 0, 0);
      
    }
    action_sound(blam, 0);
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treegrower::myevent_collision_103()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,103)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(___200pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 0);
    
  }
  action_sound(blam, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 99, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("100", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_VARIABLESofgod::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  CKThebunnydeath = 0;
  CKThetreecity = 0;
  CKThegold = 0;
  CKThesilver = 0;
  CKTheplagues = 0;
  CKTheforests = 0;
  CKNomountain = 0;
  lightthevillage = 0;
  treevariable = 0;
  hasitrainedyet = 0;
  comettomountain = 0;
  isthefuelthere = 0;
  istheoilthere = 0;
  rabbitIQcountdown = 0;
  whenbluescoregoes = 0;
  areallbuttonsgone = 0;
  nomoreenderamessages = 0;
  humansFIGUREitout = 0;
  mannowhasahomenow = 0;
  
  return 0;
}

variant enigma::OBJ____200pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ____200pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____200pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____200pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(- 1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 199, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____200pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 255, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("-200", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_redparticleoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(redparticleoffury, 100, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_redparticleoffury::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_dice(2))
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(0, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(90, 0.25);
        
      }
      
    }
    
  }
  else
  {
    if(action_if_dice(2))
    {
      
      {
        argument_relative = 0;
        action_set_gravity(180, 0.25);
        
      }
      
    }
    else
    {
      
      {
        argument_relative = 0;
        action_set_gravity(270, 0.25);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_redparticleoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_treesofglory::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  CKTheforests += 1;
  hasitrainedyet = 0;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_250pts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treesofglory::myevent_collision_221()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,221)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(treecitybarb, 1);
  
  return 0;
}

variant enigma::OBJ_treesofglory::myevent_collision_286()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,286)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(treecitybarbrabbit, 1);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_250pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_250pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_250pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_250pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 249, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_250pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("250", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treeseedlenigmaingparticle::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(orangeparticleoffury, 30, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(180, 0.1);
    
  }
  
  {
    argument_relative = 0;
    action_move("111111111", 3.5);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_treeseedlenigmaingparticle::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_wenigmaindyearthcreate::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(wenigmaindlong, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(3, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(225, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindyearthcreate::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3, 0);
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    with(treesofglory)
    {
      
      {
        argument_relative = 1;
        action_create_object(treeseedlenigmaingparticle, 25, 20);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindyearthcreate::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    if(action_if_number(treesofglory, 3, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(treegrower, 430, 305);
        
      }
      
    }
    
  }
  if(action_if_number(treesofglory, 3, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(treegrower, 75, 350);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindyearthcreate::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
action_kill_object();
  action_end_sound(wenigmaindlong);
  if(action_if_number(treesofglory, 0, 2))
  {
    if(action_if_number(treesofglory, 3, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(treegrower, 530, 290);
        
      }
      
    }
    
  }
  if(action_if_number(treesofglory, 3, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(treegrower, 10, 250);
      
    }
    
    {
      argument_relative = 0;
      action_create_object(treegrower, 3, 304);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_wenigmaindyearthcreate::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("THE WIND'S A BLOWIN...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thevolcanofrmmtn::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_250pts, 0, 0);
    
  }
  image_speed = 0.075;
  
  return 0;
}

variant enigma::OBJ_thebubblenigmainvolcano::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(rockfrmvolcanogrnd, 0, 0))
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_250pts, 0, 0);
      
    }
    
  }
  image_speed = 0.075;
  
  {
    argument_relative = 0;
    action_set_alarm(125, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebubblenigmainvolcano::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(250, 0);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 1;
      action_create_object(volcanofire, 34, 0);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(volcanofire, 60, 10);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanofire::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 0;
      action_set_gravity(90, 0.1);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_set_gravity(90, 0.075);
      
    }
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.66;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanofire::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_change_object(smokeafter, 1);
  
  return 0;
}

variant enigma::OBJ_blueparticleoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(orangeparticleoffury, 30, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(270, 0.1);
    
  }
  
  {
    argument_relative = 0;
    action_move("111111111", 3.5);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_blueparticleoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100bluepts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  whenbluescoregoes += 1;
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(1, 1);
    
  }
  action_sound(kuppel, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100bluepts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100bluepts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(2, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100bluepts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 99, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_100bluepts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 16711680, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("100", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_whatsbluescore::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(575, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_whatsbluescore::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_whatsbluescore::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("The BLUE scores occur when something evolves over enigmatime . You have no control over these evolutions, though you can prevent or allow it to happen enigmain the first place. \n \nEvolution is always good. Blue scores are a nice bonus!");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_whatsbluescore::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_mousecursor1::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_mousecursor1::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_move_to(mouse_x, mouse_y);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitcreates::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thebunnyofearth, 544, 384);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thebunnyofearth, 576, 368);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thebunnyofearth, 592, 400);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitcreates::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_number(treegrower, 0, 2))
  {
    with(thebunnyofearth)
    {
      action_change_object(thebunnyeatstrees, 1);
      
    }
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    with(thebunnyofearth)
    {
      action_change_object(thebunnyhasahome, 1);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebunnyofearth::myevent_collision_118()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,118)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
CKThebunnydeath += 1;
  
  {
    argument_relative = 1;
    action_create_object(___200pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 0);
    
  }
  action_sound(blam, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebunnyeatstrees::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  seedlingseatencheck += 1;
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thebunnyeatstrees::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(treegrower, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(treegrower))-> x, enigma::glaccess(int(treegrower))-> y, 1, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnyeatstrees::myevent_collision_77()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,77)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
with(thebunnyeatstrees)
  {
    action_change_object(thebunnyofearth, 1);
    
  }
  action_change_object(thebunnyofearth, 1);
  
  return 0;
}

variant enigma::OBJ_thebunnyhasahome::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thebunnyhasahome::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(treesofglory, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(treesofglory))-> x, enigma::glaccess(int(treesofglory))-> y, 1, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnyhasahome::myevent_collision_82()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,82)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
with(thebunnyeatstrees)
  {
    action_change_object(Fthebunnystayhome, 1);
    
  }
  action_change_object(Fthebunnystayhome, 1);
  
  return 0;
}

variant enigma::OBJ_Fthebunnystayhome::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_drawtherabbitiq::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 99, 2))
  {
    action_draw_font("Arial Black", 14, 255, 0, 0, 0, 0);
    with(rabbitiqbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_therabbitiq(int(self)), 0, 10);
        
      }
      
    }
    
  }
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 100, 1))
  {
    action_draw_font("Arial Black", 18, 255, 0, 0, 0, 0);
    with(rabbitiqbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_therabbitiq(int(self)), 3, 7);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1BCrabbitswantIQ::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(bells, 0);
  
  {
    argument_relative = 0;
    action_create_object(AsksforhelpD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  with(holdquestionslater)
  {
    action_change_object(firstopportunity, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1BCrabbitswantIQ::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(AsksforhelpD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(RabbitswantIQD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1BCrabbitswantIQ::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(RabbitswantIQD)
  {
    action_kill_object();
    
  }
  with(holdfordivenigmaine)
  {
    action_change_object(_DONTUSENUMBERS_1divenigmaineenigmaenigmaintbutton, 1);
    
  }
  with(holdfornothenigmaingd)
  {
    action_change_object(_DONTUSENUMBERS_1donothenigmaingatall, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_AsksforhelpD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(AsksforhelpD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_AsksforhelpD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("It looks as though someone or something is praying for help...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_RabbitswantIQD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(AsksforhelpD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_RabbitswantIQD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rabbits hunger for knowledge. What will you do?", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_donothenigmaing::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(dosomethenigmaing, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_donothenigmaing::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 1, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Do nothing- let them control their own destiny...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_holdfornothenigmaingd::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(noenigmainfoD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_holdfornothenigmaingd::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(noenigmainfoD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_noenigmainfoD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(noenigmainfoD, 1, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_noenigmainfoD::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_noenigmainfoD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("NO INFORMATION AVAILABLE", 5, 463);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitflashquick::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.15;
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitflashquick::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_themanofearth::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_mannowhasahomenow(int(self)), 0, 2))
  {
    action_set_sprite(Scivilman, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_mancreates::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_create_object(_DONTUSENUMBERS_100pts, 100, 350);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themanofearth, 60, 320);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themanofearth, 50, 330);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themanofearth, 75, 376);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themanofearth, 105, 365);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(themanofearth, 70, 361);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_mancreates::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_number(themountaenigmain, 0, 2))
  {
    with(themanofearth)
    {
      action_change_object(manwalkstomountaenigmain, 1);
      
    }
    
  }
  if(action_if_number(thebunnyofearth, 0, 2))
  {
    if(action_if_number(cracktoriver, 0, 0))
      if(action_if_number(thehugecrack, 0, 0))
        with(themanofearth)
    {
      action_change_object(manwalkstobunny, 1);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_manwalkstobunny::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_manwalkstobunny::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(thebunnyofearth, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(thebunnyofearth))-> x, enigma::glaccess(int(thebunnyofearth))-> y, 1.2, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manwalkstobunny::myevent_collision_102()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,102)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
with(manwalkstobunny)
  {
    action_change_object(themanofearth, 1);
    
  }
  action_change_object(themanofearth, 1);
  
  return 0;
}

variant enigma::OBJ_manwalkstomountaenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_manwalkstomountaenigmain::myevent_step()
{
  enigma::propagate_locals(this);
if(! action_if_number(thebunnyofearth, 2, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(144, 256, 2.8, 0);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_linear_step(144, 256, 0.5, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manwalkstomountaenigmain::myevent_collision_14()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,14)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_IQrabbitparticle::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(humanflashquick, 0, 2))
  {
    action_set_sprite(greenparticle, 1);
    
  }
  if(action_if_number(rankflashquick, 0, 2))
  {
    action_set_sprite(purpleparticle, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(90, 0.04);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 0;
      action_move("000010111", 0.5);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_move("000010111", 0.8);
      
    }
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_IQrabbitparticle::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_firstopportunity::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_firstopportunity::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_firstopportunity::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("It looks like you have evolved enigmain a way that someone is praying to you. Good job!\n \nThese 'opportunities' do ! count towards your score- they usually boost the IQ of the person or animal, or do other things to the earth. It may have serious consequences - or prove fruitful- enigmain the future. \n \nChoose carefully!");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_firstopportunity::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  if(action_if_number(CheckendofERA, 1, 2))
  {
    action_kill_object();
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_areallbuttonsgone(int(self)), 8, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(ENDerabutton, 536, 154);
      
    }
    action_kill_object();
    
  }
  if(action_if_number(drawBCage, 0, 2))
  {
    if(action_if_number(wenigmaindbutton, 0, 0))
    {
      if(action_if_number(scorchbutton, 0, 0))
      {
        if(action_if_number(treebutton, 0, 0))
        {
          if(action_if_number(raenigmainbutton, 0, 0))
          {
            if(action_if_number(rabbitbutton, 0, 0))
            {
              if(action_if_number(lightnenigmainbutton, 0, 0))
              {
                if(action_if_number(asteroidbutton, 0, 0))
                {
                  if(action_if_number(manbutton, 0, 0))
                  {
                    if(action_if_number(earthquakebutton, 0, 0))
                    {
                      
                      {
                        argument_relative = 0;
                        action_create_object(ENDerabutton, 536, 154);
                        
                      }
                      action_kill_object();
                      
                    }
                    
                  }
                  
                }
                
              }
              
            }
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 1);
    
  }
  if(action_if_number(draw1ad, 0, 2))
  {
    if(action_if_number(volcanobutton, 0, 0))
    {
      if(action_if_number(fishbutton, 0, 0))
      {
        if(action_if_number(enigmafreezebutton, 0, 0))
        {
          if(action_if_number(goldbutton, 0, 0))
          {
            if(action_if_number(heaenigmatmajorbutton, 0, 0))
            {
              if(action_if_number(wenigmaindbutton, 0, 0))
              {
                if(action_if_number(floodbutton, 0, 0))
                {
                  if(action_if_number(itsasignbutton, 0, 0))
                  {
                    
                    {
                      argument_relative = 0;
                      action_create_object(ENDerabutton, 536, 154);
                      
                    }
                    action_kill_object();
                    
                  }
                  
                }
                
              }
              
            }
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 2);
    
  }
  if(action_if_number(draw500ad, 0, 2))
  {
    if(action_if_number(raenigmain2button, 0, 0))
    {
      if(action_if_number(restbutton, 0, 0))
      {
        if(action_if_number(gold2button, 0, 0))
        {
          if(action_if_number(Pfliesbutton, 0, 0))
          {
            if(action_if_number(farmenigmaingbutton, 0, 0))
            {
              
              {
                argument_relative = 0;
                action_create_object(ENDerabutton, 536, 154);
                
              }
              action_kill_object();
              
            }
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 3);
    
  }
  if(action_if_number(draw1000ad, 0, 2))
  {
    if(action_if_number(fish2button, 0, 0))
    {
      if(action_if_number(flood2button, 0, 0))
      {
        if(action_if_number(itsanothersignbutton, 0, 0))
        {
          if(action_if_number(silverbutton, 0, 0))
          {
            if(action_if_number(catapultybutton, 0, 0))
            {
              if(action_if_number(rest2button, 0, 0))
              {
                
                {
                  argument_relative = 0;
                  action_create_object(ENDerabutton, 536, 154);
                  
                }
                action_kill_object();
                
              }
              
            }
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 4);
    
  }
  if(action_if_number(draw1500ad, 0, 2))
  {
    if(action_if_number(silver2button, 0, 0))
    {
      if(action_if_number(Pbloodbutton, 0, 0))
      {
        if(action_if_number(lightnenigmain3button, 0, 0))
        {
          if(action_if_number(oilbutton, 0, 0))
          {
            if(action_if_number(rest3button, 0, 0))
            {
              
              {
                argument_relative = 0;
                action_create_object(ENDerabutton, 536, 154);
                
              }
              action_kill_object();
              
            }
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 5);
    
  }
  if(action_if_number(draw2000ad, 0, 2))
  {
    if(action_if_number(fuelbutton, 0, 0))
    {
      if(action_if_number(Pdeathbutton, 0, 0))
      {
        if(action_if_number(rest4button, 0, 0))
        {
          if(action_if_number(medicalbutton, 0, 0))
          {
            
            {
              argument_relative = 0;
              action_create_object(ENDerabutton, 536, 154);
              
            }
            action_kill_object();
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_CheckendofERA::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
if(action_if_number(draw2100ad, 0, 2))
  {
    if(action_if_number(rest5button, 0, 0))
    {
      if(action_if_number(peacebutton, 0, 0))
      {
        
        {
          argument_relative = 0;
          action_create_object(ENDerabutton, 536, 154);
          
        }
        action_kill_object();
        
      }
      
    }
    
  }
  else
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ENDerabutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(ENDerabutton, 1, 2))
  {
    action_kill_object();
    
  }
  with(Xednouse)
  {
    action_kill_object();
    
  }
  image_speed = 0.05;
  
  {
    argument_relative = 0;
    action_set_alarm(25, 0);
    
  }
  action_sound(beepsmall, 1);
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_nomoreenderamessages(int(self)), 0, 0))
  {
    with(holdquestionslater)
    {
      action_change_object(theendofanera, 1);
      
    }
    enigma::varaccess_nomoreenderamessages(int(self))= 10;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ENDerabutton::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_end_sound(beepsmall);
  
  return 0;
}

variant enigma::OBJ_ENDerabutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_end_sound(beepsmall);
  if(action_if_number(drawBCage, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraBC, 0, 0);
      
    }
    
  }
  if(action_if_number(draw1ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD1, 0, 0);
      
    }
    
  }
  if(action_if_number(draw500ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD500, 0, 0);
      
    }
    
  }
  if(action_if_number(draw1000ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD1000, 0, 0);
      
    }
    
  }
  if(action_if_number(draw1500ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD1500, 0, 0);
      
    }
    
  }
  if(action_if_number(draw2000ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD2000, 0, 0);
      
    }
    
  }
  if(action_if_number(draw2100ad, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(TALLYuptheeraAD2100, 0, 0);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_theendofanera::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theendofanera::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theendofanera::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("Looks like you have reached the } of a long era. Pressing the '} era' button will thrust you thousands of years into the future, with enigmanew powers. Your rank may change as well.");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theendofanera::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 0);
    
  }
  if(action_if_number(themountaenigmain, 0, 0))
  {
    if(action_if_number(thebubblenigmainvolcano, 0, 0))
    {
      if(action_if_number(thevolcanofrmmtn, 0, 0))
      {
        CKNomountain += 1;
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_number(holdfordivenigmaine, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(noopportunityD, 0, 0);
      
    }
    with(holdfornothenigmaingd)
    {
      action_kill_object();
      
    }
    with(holdfordivenigmaine)
    {
      action_kill_object();
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_create_object(yesopportunityD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(noopportunityD)
  {
    action_kill_object();
    
  }
  with(yesopportunityD)
  {
    action_kill_object();
    
  }
  if(action_if_score(1250, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(1249, 2))
  {
    if(action_if_score(2899, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverageD, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(2899, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgoodD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverageD)
  {
    action_kill_object();
    
  }
  with(rankisgoodD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(drawBCage)
  {
    action_change_object(draw1ad, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
with(holdquestionslater)
  {
    action_change_object(whyisitXed, 1);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(wenigmaindbutton, 400, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(floodbutton, 448, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(volcanobutton, 496, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(enigmafreezebutton, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(goldbutton, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishbutton, 496, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(heaenigmatmajorbutton, 544, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(itsasignbutton, 592, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfordivenigmaine, 544, 112);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfornothenigmaingd, 592, 112);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraBC::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_draw1ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 1 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_noopportunityD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("No opportunities given. No points awarded.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_yesopportunityD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_create_object(_DONTUSENUMBERS_100pts, 550, 100);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(_DONTUSENUMBERS_100pts, 550, 100);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_yesopportunityD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Opportunity taken- 200 points!", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_letsseehereD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16776960, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Tallying up the score...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisbadD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rank for era: EVIL. No rank points awarded.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisgoodD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisgoodD::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(rankflashquick, 600, 440);
    
  }
  rankofgod +=- 2;
  
  return 0;
}

variant enigma::OBJ_rankisgoodD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rank for era: GLORIOUS. 2 rank points awarded!", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisaverageD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisaverageD::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(rankflashquick, 600, 440);
    
  }
  rankofgod +=- 1;
  
  return 0;
}

variant enigma::OBJ_rankisaverageD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rank for era: AVERAGE. 1 rank point awarded.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankflashquick::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.15;
  action_sound(kuppel, 0);
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankflashquick::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_starthenigmaingenigmaneweraD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16711935, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Starting enigmanew era...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(! action_if_number(thebubblenigmainvolcano, 0, 2))
  {
    action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(volcanoboomD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  with(thebubblenigmainvolcano)
  {
    action_change_object(volcanoexplodenigmain, 1);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(volcanoboomD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(volcanoboomD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanobutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(volcanoboomD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(! action_if_number(thelakecrator, 0, 2))
  {
    action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(fishenigmainwaterD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(thefishenator, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(fishenigmainwaterD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmainwaterD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(fishenigmainwaterD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(floodareaD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thunderstormcreate, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(floodareaD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(floodareaD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(floodareaD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(enigmafreezelandD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(enigmafreezenigmaenigmaintheearth, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(enigmafreezelandD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(enigmafreezelandD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezebutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(enigmafreezelandD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(themanofearth, 0, 2))
  {
    action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(goldenD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(goldisplaced, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(goldenD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(goldenD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(goldenD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(heathotD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(scorchformanhelp, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(heathotD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(heathotD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heaenigmatmajorbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(heathotD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(itssignmanD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(thesignisshown, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(itssignmanD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(itssignmanD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsasignbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(itssignmanD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanoboomD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(volcanoboomD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanoboomD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Erupt the VOLCANO and watch the rocks fly.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishenigmainwaterD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(fishenigmainwaterD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishenigmainwaterD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16711935, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Create FISH enigmain the lake for man to eat.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodareaD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(floodareaD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_floodareaD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16776960, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("FLOOD the lands with a huge thunderstorm.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezelandD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(enigmafreezelandD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezelandD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 12632256, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("FREEZE the land with a powerful temperature change.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldenD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(goldenD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldenD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Create GOLD upon the lands...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heathotD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(heathotD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_heathotD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Strike the land with sweltering HEAT.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itssignmanD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(itssignmanD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itssignmanD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Create a holy SIGN from above for all of man to see...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_drawthehumaniq::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 99, 2))
  {
    action_draw_font("Arial Black", 14, 65280, 0, 0, 0, 0);
    with(humaniqbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_thehumaniq(int(self)), 0, 10);
        
      }
      
    }
    
  }
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 100, 1))
  {
    action_draw_font("Arial Black", 18, 65280, 0, 0, 0, 0);
    with(humaniqbox)
    {
      
      {
        argument_relative = 1;
        action_draw_variable(enigma::varaccess_thehumaniq(int(self)), 3, 7);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_humanflashquick::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.15;
  action_sound(kuppel, 0);
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 40, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 30, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(IQrabbitparticle, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_humanflashquick::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_whyisitXed::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_whyisitXed::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_whyisitXed::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("You may have noticed that certain functions have an X on them. You have ! evolved properly to use the function. For example, if you did ! create a volcano enigmain the previous era, you can! erupt a volcano enigmain enigmathis era. \n \nTry experimenting next enigmatime you play. Its usually ! possible to have all the functions available at once.");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_whyisitXed::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_thunderstormcreate::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  action_sound(raenigmain, 1);
  
  {
    argument_relative = 0;
    action_set_alarm(450, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(150, 2);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thunderstormcreate::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(enigmarandomraenigmain, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(enigmarandomraenigmain, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thunderstormcreate::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
hasitrainedyet = 2;
  action_end_sound(raenigmain);
  with(treegrower)
  {
    action_change_object(treesofglory, 1);
    
  }
  with(thecrator)
  {
    action_change_object(thelakecrator, 1);
    
  }
  with(thehugecrack)
  {
    action_change_object(cracktoriver, 1);
    
  }
  if(action_if_number(GROUNDisregular, 0, 2))
  {
    with(GROUNDisregular)
    {
      action_change_object(GROUNDismushy, 1);
      
    }
    action_kill_object();
    
  }
  if(action_if_number(GROUNDisdry, 0, 2))
  {
    with(GROUNDisdry)
    {
      action_change_object(GROUNDisregular, 1);
      
    }
    action_kill_object();
    
  }
  if(action_if_number(GROUNDismushy, 0, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thunderstormcreate::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(thelightnenigmainfire, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainasignabove::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(thundersmall, 0);
  
  {
    argument_relative = 1;
    action_create_object(fireballrunsup, 0, 335);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballrunsup, 25, 335);
    
  }
  image_speed = 0.375;
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 200, 150);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmainasignabove::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_lightnenigmainasignabove::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }

  {
    argument_relative = 1;
    action_create_object(lightnenigmainasignabove, 100, - 2);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thesignisshown::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(185, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thesignisshown::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 25;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thesignisshown::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_sound(Alejuha, 0);
  
  {
    argument_relative = 0;
    action_create_object(lightnenigmainasignabove, 50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fireballrunsup::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_gravity(90, 0.3);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.66;
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  image_speed = 0.25;
  
  return 0;
}

variant enigma::OBJ_fireballrunsup::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 10, 10);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(orangeparticleoffury, 10, 10);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(orangeparticleoffury, 10, 10);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(orangeparticleoffury, 10, 10);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fireballrunsup::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_change_object(smokeafter, 1);
  
  return 0;
}

variant enigma::OBJ_enigmafreezenigmaenigmaintheearth::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(80, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmafreezenigmaenigmaintheearth::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(thelakecrator)
  {
    action_change_object(thefrozenlake, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_enigmafreezenigmaenigmaintheearth::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
action_sound(snowwenigmaind, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(180, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefrozenlake::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  icylakecheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100pts, 0, 0);
    
  }
  action_sound(soundicilcles, 0);
  
  return 0;
}

variant enigma::OBJ_goldisplaced::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_create_object(goldishere, 352, 400);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(goldishere, 340, 390);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_goldishere::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  action_sound(goldenchime, 0);
  
  return 0;
}

variant enigma::OBJ_goldishere::myevent_collision_167()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,167)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
CKThegold += 1;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_mountaenigmaincityplace::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  rockcitycheck += 1;
  mannowhasahomenow += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(themanofearth, 19, 93);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themangoestogold::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_themangoestogold::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(goldishere, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(goldishere))-> x, enigma::glaccess(int(goldishere))-> y, 1.2, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themangoestogold::myevent_collision_165()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,165)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  action_change_object(themanofearth, 1);
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(goldishere, 0, 2))
  {
    with(themanofearth)
    {
      action_change_object(themangoestogold, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_humansFIGUREitout(int(self)), 10, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(Manhasevolved2, 0, 0);
      
    }
    enigma::varaccess_humansFIGUREitout(int(self))+= 20;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(sizzly);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchformanhelp::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(sizzly, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(180, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_scorchformanhelp::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(thefrozenlake)
  {
    action_change_object(thelakecrator, 1);
    
  }
  with(themountaenigmain)
    if(action_if_variable(enigma::varaccess_itsnowacavehome(int(self)), 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(HOLDEVERYTHING, 0, 0);
      
    }
    
    {
      argument_relative = 0;
      action_create_object(_DONTUSENUMBERS_1AD1heaenigmatmanwants, 0, 0);
      
    }
    with(EndofTURNAD1)
    {
      action_kill_object();
      
    }
    action_kill_object();
    
  }
  else
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1heaenigmatmanwants::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_end_sound(sizzly);
  action_sound(bells, 0);
  
  {
    argument_relative = 0;
    action_create_object(AsksforhelpD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1heaenigmatmanwants::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(AsksforhelpD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(HeattoohotDa, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1heaenigmatmanwants::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(HeattoohotDa)
  {
    action_kill_object();
    
  }
  with(holdfordivenigmaine)
  {
    action_change_object(_DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton, 1);
    
  }
  with(holdfornothenigmaingd)
  {
    action_change_object(_DONTUSENUMBERS_2donothenigmaingatall, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_HeattoohotDa::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(AsksforhelpD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HeattoohotDa::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Man is HOT- their food is spoiled, and they hunger. What will you do?", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2donothenigmaingatall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2donothenigmaingatall::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  humansFIGUREitout = 10;
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2donothenigmaingatall::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(donothenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2donothenigmaingatall::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(donothenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 5;
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_2donothenigmaingatall)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(dosomethenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_2addivenigmaineenigmaenigmaintbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Manhasevolved2::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  action_sound(bells, 0);
  action_message("Man has invented FOOD STORAGE on their own! IQ points awarded!");
  
  return 0;
}

variant enigma::OBJ_Manhasevolved2::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 20;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ____75pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ____75pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____75pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____75pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(- 1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 74, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____75pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 255, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("-75", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanorockflyenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(15, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("000000101", 6);
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(270, 0.12);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.5;
    
  }
  else
  {
    image_speed = 0.25;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanorockflyenigmain::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_volcanoexplodenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  volcanocheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  image_speed = 0.075;
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(15, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanoexplodenigmain::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballrunsup, 34, 0);
      
    }
    
    {
      argument_relative = 1;
      action_create_object(volcanofire, 34, 0);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(fireballrunsup, 60, 10);
      
    }
    
    {
      argument_relative = 1;
      action_create_object(volcanofire, 60, 10);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanoexplodenigmain::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 1);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 1;
      action_create_object(volcanofire, 15, 0);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 1;
      action_create_object(volcanorockflyenigmain, 25, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_volcanoexplodenigmain::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
action_sound(hugesplodenigmain, 0);
  
  {
    argument_relative = 0;
    action_create_object(rockfrmvolcanogrnd, 560, 370);
    
  }
  action_change_object(thebubblenigmainvolcano, 1);
  
  return 0;
}

variant enigma::OBJ_volcanoexplodenigmain::myevent_step()
{
  enigma::propagate_locals(this);
with(redparticleoffury)
  {
    action_kill_object();
    
  }
  with(orangeparticleoffury)
  {
    action_set_sprite(redvolcanoparticle, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rockfrmvolcanogrnd::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  with(themanofearth)
  {
    action_change_object(manwalkstorock, 1);
    
  }
  with(manwalkstobunny)
  {
    action_change_object(manwalkstorock, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  with(particleoffury)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rockfrmvolcanogrnd::myevent_collision_214()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,214)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_move_to(40, 30);
    
  }
  action_set_sprite(fliesparticle, 1);
  if(action_if_number(therockcityshitty, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(therockcityshitty, 528, 336);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 2);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 7);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thefishenator::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fishenigmaenigmaintolake, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(50, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishenigmaenigmaintolake::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_move_random(0, 0);
  if(action_if_dice(2))
  {
    image_speed = 0.35;
    
  }
  
  {
    argument_relative = 0;
    action_set_friction(0.5);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(smallsparkoflights, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishenigmaenigmaintolake::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_move_point(144, 288, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fishenigmaenigmaintolake::myevent_collision_16()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,16)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(_DONTUSENUMBERS_5pts, 1);
  lakefishcheck = 10;
  
  return 0;
}

variant enigma::OBJ_fishenigmaenigmaintolake::myevent_collision_68()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,68)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(___5pts, 1);
  
  return 0;
}

variant enigma::OBJ_fishenigmaenigmaintolake::myevent_collision_161()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,161)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(___5pts, 1);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  if(! action_if_sound(dodododa))
  {
    action_sound(dodododa, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(greenparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 4, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 65280, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("5", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____5pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  if(! action_if_sound(dodododa))
  {
    action_sound(dodododa, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____5pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____5pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____5pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(- 1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 5, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____5pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 255, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("-5", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_smallsparkoflights::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(2))
  {
    image_speed = 0.5;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_smallsparkoflights::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thelogotitleBS::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 0);
    
  }
  action_end_sound(raenigmain);
  
  return 0;
}

variant enigma::OBJ_thelogotitleBS::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(rabitcreditsC, 472, 96);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelogotitleBS::myevent_keypress_67()
{
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  if(action_if_question("Clear the high score list?")
    )
  {
    action_highscore_clear();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelogotitleBS::myevent_keypress_75()
{
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  if(action_if_number(MUSICkillerKkey, 0, 0))
  {
    if(action_if_question("Kill all the music enigmain the game? This function is irreversable once a save takes place.")
      )
    {
      
      {
        argument_relative = 0;
        action_create_object(MUSICkillerKkey, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_number(holdfordivenigmaine, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(noopportunityD, 0, 0);
      
    }
    with(holdfornothenigmaingd)
    {
      action_kill_object();
      
    }
    with(holdfordivenigmaine)
    {
      action_kill_object();
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_create_object(yesopportunityD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(noopportunityD)
  {
    action_kill_object();
    
  }
  with(yesopportunityD)
  {
    action_kill_object();
    
  }
  if(action_if_score(2550, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(2549, 2))
  {
    if(action_if_score(4199, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverageD, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(4199, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgoodD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverageD)
  {
    action_kill_object();
    
  }
  with(rankisgoodD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  with(themountaenigmain)
    if(action_if_variable(enigma::varaccess_itsnowacavehome(int(self)), 0, 2))
  {
    with(themountaenigmain)
    {
      action_change_object(mountaenigmaincityplace, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(draw1ad)
  {
    action_change_object(draw500ad, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
with(holdquestionslater)
  {
    action_change_object(theplagues, 1);
    
  }
  areallbuttonsgone = 4;
  
  {
    argument_relative = 0;
    action_create_object(gold2button, 496, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(raenigmain2button, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(farmenigmaingbutton, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(Pfliesbutton, 544, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(restbutton, 592, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfordivenigmaine, 544, 112);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfornothenigmaingd, 592, 112);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    if(action_if_number(themanofearth, 0, 2))
    {
      if(action_if_number(mountaenigmaincityplace, 0, 0))
      {
        with(themanofearth)
        {
          action_change_object(manwalkstoforest, 1);
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_draw500ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 500 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(raenigmainagroundD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(raenigmaincreator, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD500, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(blam, 0);
  action_sound(whizz, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(raenigmainagroundD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_raenigmain2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD500::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD500::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD500::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(goldishere, 0, 2))
  {
    with(themanofearth)
    {
      action_change_object(themangoestogold, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD500::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(sizzly);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD500::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  if(action_if_number(themanofearth, 1, 2))
  {
    action_change_object(Xednouse, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(goldenD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(goldisplaced2, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(goldenD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(goldenD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_gold2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(goldenD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefarmland::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  farmcheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_250pts, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarm, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 170, - 75);
    
  }
  action_sound(peaceful, 0);
  
  return 0;
}

variant enigma::OBJ_thefarmland::myevent_destroy()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(blam, 0);
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 10, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 20, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 30, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 40, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 50, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 60, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 70, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 80, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 90, 70);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(IQrabbitparticle, 100, 70);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(farmlandD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(makenigmaenigmainthefarm, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(farmlandD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(farmlandD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmenigmaingbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(farmlandD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmlandD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(farmlandD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_farmlandD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 12632256, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Make a nice FARMLAND for man.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_makenigmaenigmainthefarm::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(120, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_makenigmaenigmainthefarm::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(thefarmland, 272, 144);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarm::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(Farmparticleenigmarand, 20, 70);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(625, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarm::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 0);
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 10, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 35, 70);
        
      }
      
    }
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 60, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 90, 70);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarm::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Farmparticleenigmarand::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_dice(2))
  {
    action_set_sprite(greenparticle, 1);
    
  }
  else
  {
    action_set_sprite(purpleparticle, 1);
    
  }
  if(action_if_number(particlefarmmedicenigmaine, 0, 2))
  {
    action_set_sprite(ornageparticle, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(90, 0.04);
    
  }
  if(action_if_dice(2))
  {
    
    {
      argument_relative = 0;
      action_move("000010111", 0.5);
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_move("000010111", 0.8);
      
    }
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Farmparticleenigmarand::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(PfliesD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(Alejuha, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(plagueflycreate, 639, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(goldenD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(PfliesD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pfliesbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(PfliesD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PfliesD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(PfliesD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PfliesD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("PLAGUE: Fly infestation", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theplagues::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theplagues::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theplagues::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("PLAGUES are now enigmain effect (the commands with the red-orange borders). When you choose enigmathis item, a deadly plague will sweep the world. If man is prepared, they can survive and earn even more IQ points. If not, expect destruction, mayhem, and low points. \n \nMake sure your people are ready for a plague before doing one!");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theplagues::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_fliesoffury::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(550, 0);
    
  }
  if(action_if_number(fliesoffury, 100, 2))
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_set_gravity(180, 0.1);
    
  }
  
  {
    argument_relative = 0;
    action_move("110110110", 3.5);
    
  }
  if(action_if_dice(2))
  {
    image_speed = 0.15;
    
  }
  else
  {
    image_speed = 0.45;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fliesoffury::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(! action_if_sound(fire))
  {
    action_sound(fire, 0);
    
  }
  action_change_object(smallsparkoflights, 1);
  
  return 0;
}

variant enigma::OBJ_fliesoffury::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_reverse_xdir();
  action_reverse_ydir();
  
  return 0;
}

variant enigma::OBJ_plagueflycreate::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  action_end_sound(Sommersecret);
  action_end_sound(Sommerswork);
  action_end_sound(Beautiful1);
  action_end_sound(Beautiful3);
  action_end_sound(Dayafter2);
  action_end_sound(Jungleloon);
  action_end_sound(MDKmax);
  action_end_sound(Beautiful2);
  action_end_sound(Oceantess);
  action_end_sound(Goodasitgets);
  action_end_sound(Evolution2);
  
  return 0;
}

variant enigma::OBJ_plagueflycreate::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(3, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fliesoffury, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fliesoffury, 5, 8);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_plagueflycreate::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }

  {
    argument_relative = 0;
    action_move("010000000", 2);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fliesoffury, 2, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fliesoffury, 3, 2);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fliesoffury, 5, 8);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(1, 0);
    
  }
  action_sound(soundicilcles, 1);
  action_sound(buzzfly, 0);
  
  return 0;
}

variant enigma::OBJ_plagueflycreate::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_end_sound(soundicilcles);
  
  {
    argument_relative = 0;
    action_create_object(flychecktodestroy, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_flychecktodestroy::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(buzzfly, 1);
  if(action_if_number(treegrower, 0, 2))
  {
    with(treegrower)
    {
      action_set_sprite(SseedlenigmaingR, 1);
      
    }
    
    {
      argument_relative = 0;
      action_set_alarm(100, 0);
      
    }
    
    {
      argument_relative = 0;
      action_set_alarm(5, 1);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(250, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flychecktodestroy::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(treegrower)
  {
    
    {
      argument_relative = 1;
      action_create_object(___200pts, 0, 0);
      
    }
    
  }
  with(treegrower)
  {
    action_change_object(fireballenigmaenigmaintosmk, 1);
    
  }
  action_sound(blam, 0);
  
  return 0;
}

variant enigma::OBJ_flychecktodestroy::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(treegrower, 0, 2))
  {
    with(treegrower)
    {
      action_set_sprite(SseedlenigmaingR, 1);
      
    }
    
    {
      argument_relative = 0;
      action_set_alarm(5, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flychecktodestroy::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thefarmland, 0, 2))
  {
    with(humaniqbox)
      if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 105, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(flieswenigmain, 0, 0);
        
      }
      
    }
    with(humaniqbox)
      if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 104, 2))
    {
      
      {
        argument_relative = 0;
        action_create_object(fliesaredefeated, 0, 0);
        
      }
      
    }
    
  }
  action_end_sound(buzzfly);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_fliesaredefeated::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  CKTheplagues += 1;
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  action_sound(bells, 0);
  action_message("Man was able to save their farmland and other essentials from the plague of flies. IQ points awarded!");
  
  return 0;
}

variant enigma::OBJ_fliesaredefeated::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 20;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_flieswenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  action_sound(kuppel, 0);
  action_message("Man was ! able to defend themselves against the terrible plague of flies. The farmland has been lost.");
  
  return 0;
}

variant enigma::OBJ_flieswenigmain::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(___200pts, 0, 0);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(sparkoflights, - 170, - 75);
      
    }
    
  }
  with(thefarmland)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq +=- 5;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(restasecD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rabbitsakenigmainhelp, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmrest, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD500, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(restasecD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_restbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(restasecD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_restasecD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(restasecD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_restasecD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16776960, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("It's tough being God. Make a day of rest.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmrest::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(thefarmland, 0, 0))
  {
    action_kill_object();
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(Farmparticleenigmarand, 20, 70);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(650, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(150, 2);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmrest::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 0);
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 10, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 35, 70);
        
      }
      
    }
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 60, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 90, 70);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmrest::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_particlefarmrest::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(250, 2);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_goldisplaced2::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_create_object(goldishere, 340, 415);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(goldishere, 365, 415);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rabbitsakenigmainhelp::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(325, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitsakenigmainhelp::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(action_if_number(Fthebunnystayhome, 0, 2))
  {
    with(rabbitiqbox)
      if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 25, 2))
    {
      
      {
        argument_relative = 0;
        action_create_object(HOLDEVERYTHING, 0, 0);
        
      }
      
      {
        argument_relative = 0;
        action_create_object(_DONTUSENUMBERS_1AD500rabbitsagaenigmain, 0, 0);
        
      }
      with(EndofTURNAD500)
      {
        action_kill_object();
        
      }
      action_kill_object();
      
    }
    
  }
  else
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD500rabbitsagaenigmain::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_end_sound(sizzly);
  action_sound(bells, 0);
  
  {
    argument_relative = 0;
    action_create_object(AsksforhelpD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD500rabbitsagaenigmain::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(AsksforhelpD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rabbitstoodumbDa, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD500rabbitsagaenigmain::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(rabbitstoodumbDa)
  {
    action_kill_object();
    
  }
  with(holdfordivenigmaine)
  {
    action_change_object(_DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton, 1);
    
  }
  with(holdfornothenigmaingd)
  {
    action_change_object(_DONTUSENUMBERS_3donothenigmaingatall, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rabbitstoodumbDa::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(rabbitstoodumbDa, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabbitstoodumbDa::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rabbits want even more power. What will you do?", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3donothenigmaingatall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3donothenigmaingatall::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3donothenigmaingatall::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(donothenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3donothenigmaingatall::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(donothenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  therabbitiq += 65;
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 95, 2))
  {
    with(Fthebunnystayhome)
    {
      action_change_object(thebunnyisready, 1);
      
    }
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_3donothenigmaingatall)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(dosomethenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_3divenigmaineenigmaenigmaintbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manwalkstorock::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_manwalkstorock::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(565, 375, 1.3, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manwalkstorock::myevent_collision_179()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,179)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_therockcityshitty::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  volcanocitycheck += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(200, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_therockcityshitty::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(manwalkstorock)
  {
    action_kill_object();
    
  }
  with(rockfrmvolcanogrnd)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50bluepts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  whenbluescoregoes += 1;
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(1, 1);
    
  }
  action_sound(kuppel, 0);
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50bluepts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50bluepts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(2, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50bluepts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(1);
    
  }
  scorestop += 1;
  if(action_if_variable(scorestop, 49, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_50bluepts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 16711680, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("50", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_questionturnedoff::myevent_keypress_84()
{
  action_change_object(turnenigmaenigmaintoholdquest, 1);
  
  return 0;
}

variant enigma::OBJ_turnenigmaenigmaintoholdquest::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.5;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_turnenigmaenigmaintoholdquest::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_turnenigmaenigmaintoOFF::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.5;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_turnenigmaenigmaintoOFF::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(questionturnedoff, 1);
  
  return 0;
}

variant enigma::OBJ_manwalkstoforest::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_manwalkstoforest::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(treecitybarb, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(treesofglory))-> x, enigma::glaccess(int(treesofglory))-> y, 3, 0);
      
    }
    
  }
  else
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manwalkstoforest::myevent_collision_82()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,82)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_treecitybarb::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  treecitycheck += 1;
  CKThetreecity += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  with(manwalkstoforest)
  {
    action_kill_object();
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    with(Fthebunnystayhome)
    {
      action_change_object(thebunnyhasahome, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thehardstuffB::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_move_to(0, - 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_checkicon::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  checkmarkpercentage = 1;
  theroundsofgod += 1;
  action_sound(Dayafter2, 1);
  action_end_sound(MDKmax);
  action_end_sound(Oceantess);
  action_end_sound(Evolution2);
  action_end_sound(Goodasitgets);
  action_end_sound(Beautiful3);
  action_end_sound(Sommerswork);
  action_end_sound(Beautiful1);
  action_end_sound(Beautiful2);
  action_end_sound(Jungleloon);
  
  return 0;
}

variant enigma::OBJ_EASYLIST::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(5, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EASYLIST::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_cratorcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_lakecheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_icylakecheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rockcitycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_villagecheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 67);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EASYLIST::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_castlecheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_defensecheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_humaniq100check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rabbitiq30check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rank6check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 67);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EASYLIST::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_mountaincheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rivercheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_forestcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_farmcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_canyoncheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 67);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EASYLIST::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Mountain", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("River", 0, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Forest (2+ trees)", 0, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Farm", 0, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Canyon", 0, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Crator", 175, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Lake", 175, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Icy Lake", 175, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rock City", 175, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Village", 175, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Castle", 350, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Ancient Defenses", 350, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Human IQ: 100+", 350, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rabbit IQ: 30+", 350, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rank: 6+", 350, 68);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thecheckenigmanew::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  checkmarkpercentage += 2.2;
  image_speed = 0.08;
  
  return 0;
}

variant enigma::OBJ_thecheckenigmanew::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
image_speed = 0.2;
  action_set_sprite(checkmark1S, 1);
  
  return 0;
}

variant enigma::OBJ_MEDIUMLIST::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(5, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MEDIUMLIST::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_treecitycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_volcanocitycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_nowatercheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_plaguesdefendcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_volcanocheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 67);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MEDIUMLIST::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_silvercheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_goldcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_humaniq150check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rabbitiq100check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rank4check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 67);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MEDIUMLIST::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_lakefishcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_nomountaincheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_forest5check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_oilderrickcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_farmgrowthcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 68);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_MEDIUMLIST::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Lake w/fish", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("No Mountain/Crator", 0, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Forest (5+ trees)", 0, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Oil Derricks", 0, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Medical Farm", 0, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Tree City", 175, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Volcano City", 175, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("No Water Resource", 175, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Plagues Defended", 175, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Volcano Eruption", 175, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Silver Collected (2+)", 350, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Gold Collected (3+)", 350, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Human IQ: 150+", 350, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rabbit IQ: 100+", 350, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rank: 4+", 350, 68);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HARDLIST::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(5, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HARDLIST::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rockolawscheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_peacetreatycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 17);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_bunniesbcdeathcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rabbitsaddeathcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_seedlingseatencheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 155, 67);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HARDLIST::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_score8500check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_humaniq320check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 17);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rabbitiq200check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rank1check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_rank10check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, 330, 67);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HARDLIST::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_advancedcitycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, - 1);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_nuclearcheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 16);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_notreescheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 33);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_fuelfactorycheck(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 50);
      
    }
    
  }
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_treecity2check(int(self)), 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(thecheckenigmanew, - 20, 67);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_HARDLIST::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Advanced City", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Nuclear Strike", 0, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("No Trees", 0, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Fuel Factories ", 0, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Tree Cities (2)", 0, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rock of Laws", 175, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Peace Treaty", 175, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Bunnies Killed (B.C.)", 175, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rabbits Killed (A.D.)", 175, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Seedlings Eaten", 175, 68);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Score: 9,000+", 350, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Human IQ: 300+", 350, 17);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rabbit IQ: 200+", 350, 34);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rank: 1", 350, 51);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rank: 10", 350, 68);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_loadgameB::myevent_leftbutton()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_load_game("sandboxsave");
  
  return 0;
}

variant enigma::OBJ_loadgameB::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(loadgameS, 1);
  
  return 0;
}

variant enigma::OBJ_loadgameB::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(loadgameSH, 1);
  
  return 0;
}

variant enigma::OBJ_archivebB::myevent_leftbutton()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_end_sound(Sommerstitle);
  action_load_game("thearchives");
  
  return 0;
}

variant enigma::OBJ_archivebB::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(archiveS, 1);
  
  return 0;
}

variant enigma::OBJ_archivebB::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(archiveSH, 1);
  
  return 0;
}

variant enigma::OBJ_draw1000ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 1000 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverishere::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  action_sound(goldenchime, 0);
  
  return 0;
}

variant enigma::OBJ_silverishere::myevent_collision_236()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,236)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
CKThesilver += 1;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_silverishere::myevent_collision_303()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,303)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
CKThesilver += 1;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebunnyisready::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(thebunnyisready, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnygoestosilver::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thebunnygoestosilver::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(silverishere, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(silverishere))-> x, enigma::glaccess(int(silverishere))-> y, 1.5, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnygoestosilver::myevent_collision_234()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,234)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  action_change_object(thebunnyisready, 1);
  
  return 0;
}

variant enigma::OBJ_thecastleplace::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  castlecheck += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(75, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thecastleplace::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
mannowhasahomenow += 1;
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 100, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(loadedcatapult1, 85, 85);
      
    }
    with(loadedcatapult1)
    {
      
      {
        argument_relative = 1;
        action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
        
      }
      
    }
    with(themanofearth)
    {
      action_change_object(mantocatapult, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_loadedcatapult1::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  defensecheck += 1;
  
  return 0;
}

variant enigma::OBJ_loadedcatapult1::myevent_collision_259()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,259)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_change_object(smallsparkoflights, 0);
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(silverishere, 0, 2))
  {
    if(action_if_number(thebunnyisready, 0, 2))
    {
      with(thebunnyisready)
      {
        action_change_object(thebunnygoestosilver, 1);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_humansFIGUREitout(int(self)), 10, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(Manloveslaws, 0, 0);
      
    }
    enigma::varaccess_humansFIGUREitout(int(self))+= 20;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(sizzly);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1000::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(restasecD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmrest, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(manasks1000help, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(restasecD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(restasecD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(itssignmanD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(thesignisshown, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(itssignmanD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(itssignmanD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_itsanothersignbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(itssignmanD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(loadedcatapult1, 0, 0))
  {
    if(action_if_number(- 1, 0, 0))
      action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(cataDs)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(thebiglaunchcata, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(cataDs)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(cataDs, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catapultybutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(cataDs)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_cataDs::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(cataDs, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_cataDs::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Allow man to test the defensive CATAPULT.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(thebunnyisready, 0, 0))
  {
    action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(silverD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(silverishere, 480, 384);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(silverishere, 500, 395);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(silverD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(silverD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(silverD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(silverD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silverD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 12632256, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Create SILVER upon the lands...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(! action_if_number(thelakecrator, 0, 2))
  {
    action_change_object(Xednouse, 1);
    
  }
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(fishenigmainwaterD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(thefishenator, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(fishenigmainwaterD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(fishenigmainwaterD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fish2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(fishenigmainwaterD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(floodareaD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thunderstormcreate, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(floodareaD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(floodareaD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_flood2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(floodareaD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manasks1000help::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_manasks1000help::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 100, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(HOLDEVERYTHING, 0, 0);
      
    }
    
    {
      argument_relative = 0;
      action_create_object(_DONTUSENUMBERS_1AD1000manlaws, 0, 0);
      
    }
    with(EndofTURNAD1000)
    {
      action_kill_object();
      
    }
    action_kill_object();
    
  }
  else
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ManneedleaderA::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(AsksforhelpD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ManneedleaderA::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Man wants a code of laws from the heavens. What will you do?", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Manloveslaws::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 0);
    
  }
  action_sound(bells, 0);
  action_message("Man has prayed for the day you would grant them laws. They are more productive and now see the light! \n \nIQ points have been awarded!");
  
  return 0;
}

variant enigma::OBJ_Manloveslaws::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 25;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1000manlaws::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_end_sound(sizzly);
  action_sound(bells, 0);
  
  {
    argument_relative = 0;
    action_create_object(AsksforhelpD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1000manlaws::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(AsksforhelpD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(ManneedleaderA, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1000manlaws::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(ManneedleaderA)
  {
    action_kill_object();
    
  }
  with(holdfordivenigmaine)
  {
    action_change_object(_DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton, 1);
    
  }
  with(holdfornothenigmaingd)
  {
    action_change_object(_DONTUSENUMBERS_4donothenigmaingatall, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4donothenigmaingatall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4donothenigmaingatall::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4donothenigmaingatall::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(donothenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4donothenigmaingatall::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(donothenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  humansFIGUREitout = 10;
  
  {
    argument_relative = 0;
    action_create_object(thelawoftheland, 416, 176);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_4donothenigmaingatall)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(dosomethenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_4divenigmaineenigmaenigmaintbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelawoftheland::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  rockolawscheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(lightenigmainoneshot, - 7, - 310);
    
  }
  stoplawsshine = 20;
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(2, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelawoftheland::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
if(! action_if_variable(stoplawsshine, 150, 2))
  {
    stoplawsshine += 1;
    
    {
      argument_relative = 0;
      action_set_alarm(2, 0);
      
    }
    
    {
      argument_relative = 1;
      action_create_object(blueparticleoffury, 25, 25);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thelawoftheland::myevent_collision_334()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,334)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  action_message("Man has knocked down the Code of Laws! They feel it was obsolete! \n \nThey no longer believe enigmain one god. You have lost their faith.");
  
  {
    argument_relative = 1;
    action_create_object(smallsparkoflights, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(___200pts, 0, 0);
    
  }
  action_change_object(fireballenigmaenigmaintosmk, 1);
  
  return 0;
}

variant enigma::OBJ_thelawoftheland::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
if(action_if_dice(2))
  {
    if(action_if_dice(2))
    {
      if(action_if_dice(2))
        action_message("LAWS OF GOD \n \nLaw 384: You shall ! commit murder. Except when you really, really have to and there is no other choice. Or if that guy is really annoying. You know the one I'm talking about.");
      else action_message("LAWS OF GOD \n \nLaw 2: You shall ! make love to any animals on the earth. Even if you're double-dogged dared.");
      
    }
    else
    {
      if(action_if_dice(2))
        action_message("LAWS OF GOD \n \nLaw 1,293: Don't think I'm ! watching you. And that last thing you did Tuesday with that one thing? Woo boy, thats gonna take a LOT of prayin from you to get that off my mind.");
      else action_message("LAWS OF GOD \n \nLaw 605: Don't even think about taking prayer out of schools. Thats all some kids have before taking a huge exam.");
      
    }
    
  }
  else
  {
    if(action_if_dice(2))
    {
      if(action_if_dice(2))
        action_message("LAWS OF GOD \n \nLaw 669: If someone makes fun of your mama while kicking you enigmain the testicles and giving you a wedgie at the same enigmatime , you have my permission to get some revenge on that punk. Tell em' God said it was ok.");
      else action_message("LAWS OF GOD \n \nLaw 1,293,485,293: Remember law 33,584? Man, I must have been enigmain a bad mood the day I made THAT law. Try ! to violate it too many times, but you can if you want to every now and . Except on Sundays. And enigmain a public restroom.");
      
    }
    else
    {
      if(action_if_dice(2))
        action_message("LAWS OF GOD \n \nLaw 493: See that apple over there enigmain that apple barrel? No, ! that one. The one on top. Not that one...yeah! The one right there! Don't eat it, or I'll kill you. Now put it back.");
      else action_message("LAWS OF GOD \n \nLaw 3: All enigmain all, I think I might have made a mistake with the whole 'flood the earth and kill everyone' thing. There was just enigmathis one jerk on earth who wouldn't shut up and...well, I lost it, and took it out on earth.\n \nYou know, I think it was the right thing to do. Nevermind.");
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightenigmainoneshot::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(thundersmall, 0);
  
  {
    argument_relative = 1;
    action_create_object(fireballrunsup, 0, 335);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballrunsup, 25, 335);
    
  }
  image_speed = 0.2;
  
  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 200, 150);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightenigmainoneshot::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_mantocatapult::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_mantocatapult::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(loadedcatapult1, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(loadedcatapult1))-> x, enigma::glaccess(int(loadedcatapult1))-> y, 1.4, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_mantocatapult::myevent_collision_238()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,238)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
    
  }
  action_change_object(themanofearth, 1);
  
  return 0;
}

variant enigma::OBJ_catarocksuccess::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_gravity(270, 0.03);
    
  }
  
  {
    argument_relative = 0;
    action_move("000000001", 3.5);
    
  }
  image_speed = 0.45;
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catarocksuccess::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;
action_message("The launch is successful! Man is thankful that they now have a great defensive weapon, and continue to worship you. IQ points awarded!");
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 15;
  with(thebiglaunchcata)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_catarockfailure::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_gravity(270, 0.05);
    
  }
  
  {
    argument_relative = 0;
    action_move("000000010", 4.25);
    
  }
  image_speed = 0.45;
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_catarockfailure::myevent_collision_238()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,238)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 20, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(smallsparkoflights, 0, 0);
    
  }
  action_sound(blam, 0);
  
  {
    argument_relative = 1;
    action_create_object(___200pts, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebiglaunchcata::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(120, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebiglaunchcata::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_sound(goldenchime, 0);
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 135, 2))
  {
    with(loadedcatapult1)
    {
      
      {
        argument_relative = 1;
        action_create_object(catarocksuccess, 42, 2);
        
      }
      
    }
    
  }
  else
  {
    with(loadedcatapult1)
    {
      
      {
        argument_relative = 1;
        action_create_object(catarockfailure, 42, - 10);
        
      }
      
    }
    
    {
      argument_relative = 0;
      action_set_alarm(190, 1);
      
    }
    
  }
  with(loadedcatapult1)
  {
    action_set_sprite(catapultRSshot, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebiglaunchcata::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_message("It seems the catapult misfired. Man has blamed you for their lack of intelligence. IQ points deducted.");
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq +=- 20;
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebiglaunchcata::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Launching the rock...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_number(holdfordivenigmaine, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(noopportunityD, 0, 0);
      
    }
    with(holdfornothenigmaingd)
    {
      action_kill_object();
      
    }
    with(holdfordivenigmaine)
    {
      action_kill_object();
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_create_object(yesopportunityD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(noopportunityD)
  {
    action_kill_object();
    
  }
  with(yesopportunityD)
  {
    action_kill_object();
    
  }
  if(action_if_score(4800, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(4799, 2))
  {
    if(action_if_score(6000, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverage0D, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(5999, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgood1D, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverage0D)
  {
    action_kill_object();
    
  }
  with(rankisgood1D)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  if(action_if_number(mountaenigmaincityplace, 0, 2))
  {
    with(mountaenigmaincityplace)
    {
      action_change_object(thecastleplace, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(draw500ad)
  {
    action_change_object(draw1000ad, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
areallbuttonsgone = 3;
  
  {
    argument_relative = 0;
    action_create_object(silverbutton, 496, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fish2button, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(itsanothersignbutton, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(flood2button, 496, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(catapultybutton, 544, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rest2button, 592, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfordivenigmaine, 544, 112);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfornothenigmaingd, 592, 112);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD500::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_number(treesofglory, 0, 2))
  {
    if(action_if_number(themanofearth, 0, 2))
    {
      if(action_if_number(thecastleplace, 0, 0))
      {
        if(action_if_number(mountaenigmaincityplace, 0, 0))
        {
          with(themanofearth)
          {
            action_change_object(manwalkstoforest, 1);
            
          }
          
        }
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisaverage0D::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65535, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rank for era: AVERAGE. No rank points awarded.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisgood1D::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rankisgood1D::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(rankflashquick, 600, 440);
    
  }
  rankofgod +=- 1;
  
  return 0;
}

variant enigma::OBJ_rankisgood1D::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rank for era: GLORIOUS. 1 rank point awarded!", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_logoofmuseum::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(! action_if_sound(Dayafter2))
  {
    action_sound(Dayafter2, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thetheoriesB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(theroryroom, 0);
  
  return 0;
}

variant enigma::OBJ_credB::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_save_game("thearchives");
  
  return 0;
}

variant enigma::OBJ_credB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(creditsroom, 0);
  
  return 0;
}

variant enigma::OBJ_theenigmainspiresB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(enigmainspireroom, 0);
  
  return 0;
}

variant enigma::OBJ_workenigmainB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(worksroom, 0);
  
  return 0;
}

variant enigma::OBJ_mamamusicB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(musicroom, 0);
  
  return 0;
}

variant enigma::OBJ_vertigogamenigmainB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(vertigoroom, 0);
  
  return 0;
}

variant enigma::OBJ_ejectiontomenuB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(theMuseum, 0);
  
  return 0;
}

variant enigma::OBJ_theoryofgod::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("The Sandbox of god is just a game...but I actually based WINNING on the events of the bible.", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("You see, 'winning' the game means getting all your people to the final era with them still being", 0, 15);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("faithful to you as their god. In the game, if you get too many IQ points, your people will rebel", 0, 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("against you. Its interesting to see today that with the decay of society, technology marches ", 0, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("onward. If 'man' gets too smart, they will consider themselves their own god, and won't need ", 0, 60);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("you to lead them. Does that mean enigmathis game is against technology? Of course not. But I am ", 0, 75);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("against making science our own god. Rabbits, of course, need all the help they can get.", 0, 90);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("If you don't help them grow, they won't progress. Likewise, if you help out man enigmain the beginning ", 0, 105);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("and let them evolve on their own, they will grow too dependent on you. Imagine if God came ", 0, 120);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("to earth today enigmain the form of how he came back enigmain the biblical times- hard to imagine, to say", 0, 135);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("the least. Imagine if God really did give rabbits all the brains and power...ok, that sounds", 0, 150);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("kinda stupid. Nevermind.", 0, 165);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("I hope you enjoyed enigmathis game. I had fun making it!", 0, 195);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("-David Galindo, aka Mr.Chubigans", 0, 225);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_musicofgod::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("This game used many different pieces of music, including-", 0, - 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("-MDK Techno Theme, by my good friend Jesper KYD", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("-Music for an Empty Church, by Christina Vasquez", 0, 15);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("-Many royalty- enigmafree music selections from the Music Bakery", 0, 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("As you can see, there are wildly different songs put together to form a kind of musical", 0, 60);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("harmony enigmain the game. I tried to make the game a relaxing experience.", 0, 75);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("", 0, 90);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("I hope I was successful...I think I was, or at least very enigmaclose . ", 0, 105);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("", 0, 120);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("There were many more songs enigmain the game, and I'd like to thank the composers", 0, 135);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("that gave me permission to use some of their sound bytes.", 0, 150);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmainspiregod::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("The Sandbox of god was heavily influenced by the quirky Japanese game GROW, which", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("is a flash-based game on the internet. To play GROW, click the link below.", 0, 15);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("", 0, 30);
    
  }
  action_draw_font(Arial, 10, 255, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("NOTE: clicking the link will exit the game (which has been saved) and take you to the internet.", 0, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Make sure your online connection is running.", 0, 60);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_vertigogosh::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("This game was made by Vertigo Games, a Texas ''company'' that makes only", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("the best enigmafree games ever. To visit us, click on the link below.", 0, 15);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("", 0, 30);
    
  }
  action_draw_font(Arial, 10, 255, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("NOTE: clicking the link will exit the game (which has been saved) and take you to the internet.", 0, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Make sure your online connection is running.", 0, 60);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ejectotthegameB::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_end_sound(Dayafter2);
  action_another_room(Maenigmainmenu, 0);
  
  return 0;
}

variant enigma::OBJ_growlenigmainkA::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_webpage("http://www.vertigogaming.net/grow26014.htm");
  action_end_game();
  
  return 0;
}

variant enigma::OBJ_vertigolenigmainkA::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_webpage("http://www.vertigogaming.net");
  action_end_game();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_number(holdfordivenigmaine, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(noopportunityD, 0, 0);
      
    }
    with(holdfornothenigmaingd)
    {
      action_kill_object();
      
    }
    with(holdfordivenigmaine)
    {
      action_kill_object();
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_create_object(yesopportunityD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(noopportunityD)
  {
    action_kill_object();
    
  }
  with(yesopportunityD)
  {
    action_kill_object();
    
  }
  if(action_if_score(5500, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(5499, 2))
  {
    if(action_if_score(6800, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverage0D, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(6799, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgood1D, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverage0D)
  {
    action_kill_object();
    
  }
  with(rankisgood1D)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  if(action_if_number(thecastleplace, 0, 2))
  {
    with(thecastleplace)
    {
      action_change_object(thevillagecityT, 1);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(draw1000ad)
  {
    action_change_object(draw1500ad, 1);
    
  }
  if(action_if_number(thebunnyisready, 0, 2))
  {
    if(action_if_number(treesofglory, 0, 2))
    {
      with(thebunnyisready)
      {
        action_change_object(thebunnystartsacity, 1);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
areallbuttonsgone = 4;
  
  {
    argument_relative = 0;
    action_create_object(silver2button, 496, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(lightnenigmain3button, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(oilbutton, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(Pbloodbutton, 544, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rest3button, 592, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfordivenigmaine, 544, 112);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(holdfornothenigmaingd, 592, 112);
    
  }
  with(holdquestionslater)
  {
    action_change_object(makesureto1500, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1000::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_draw1500ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 1500 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thevillagecityT::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  villagecheck += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(75, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thevillagecityT::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
mannowhasahomenow += 1;
  
  return 0;
}

variant enigma::OBJ_treecitybarbrabbit::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  CKThetreecity += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(thecivilbunny, 100, 80);
    
  }
  nowrabbitsvillage = 0;
  
  return 0;
}

variant enigma::OBJ_treecitybarbrabbit::myevent_collision_342()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,342)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 200, - 150);
    
  }
  action_sound(fire, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 1;
    action_create_object(___1500pts, 0, 0);
    
  }
  with(thecivilbunny)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thebunnystartsacity::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thebunnystartsacity::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(enigma::glaccess(int(treesofglory))-> x, enigma::glaccess(int(treesofglory))-> y, 1.5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnystartsacity::myevent_collision_82()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,82)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_worksofgod::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 10, 12632256, 1, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("There are many games that influenced the Sandbox of god, one of which you can play (see the ", 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Inspirations section). I think mostly it was the many early Maxis games of the past, including Sim", 0, 15);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Farm, Sim City & Sim City 2000, Sim Tower, and even Sim Ant. Believe it or not, I never played", 0, 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Sim Earth. ", 0, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Sid Meier's Civilization is also a heavy influence. I remember playing that game for hours", 0, 60);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("till the morning'. That was an awesome game that didn't depend on graphics for fun. It's", 0, 75);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("still a game I might pull out of the drawer every now and to play. ", 0, 90);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("You know, one of my first successful games (Prisms of Light) was a puzzle game, and while ", 0, 105);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("many did like it, another handful didn't care for it. I hope Sandbox of god has changed your", 0, 120);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("thoughts on puzzle games, or at least strengthened it.", 0, 135);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Make sure to go to vertigogaming.net for more enigmafree games. Thanks!", 0, 165);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("-David Galindo, aka Mr.Chubigans", 0, 225);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rabitcreditsC::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_another_room(creditsroom, 0);
  
  return 0;
}

variant enigma::OBJ_rabitcreditsC::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(rabbitlightS, 1);
  
  return 0;
}

variant enigma::OBJ_rabitcreditsC::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(rabbitdarkS, 1);
  
  return 0;
}

variant enigma::OBJ_Creditsofgosh::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 12, 16711680, 1, 1, 1, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Game, Graphics and Sound by", 0, - 40);
    
  }
  action_draw_font(Arial, 11, 16777215, 1, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("David Galindo, aka Mr.Chubigans", 0, - 20);
    
  }
  action_draw_font(Arial, 12, 16711680, 1, 1, 1, 0);
  
  {
    argument_relative = 1;
    action_draw_text("A Huge Thanks To The Following People:", 0, 10);
    
  }
  action_draw_font(Arial, 11, 16777215, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Protoman", 0, 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Yellow Monkey", 0, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Ben ", 0, 60);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Damaged", 0, 75);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("David Sakh", 0, 90);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Mark Overmars", 0, 105);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Asj50", 0, 120);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("haavards", 0, 135);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Morphosis", 0, 150);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Shadestorm", 0, 165);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("akrocks", 0, 180);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("hughman", 0, 195);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("mistacheese", 0, 210);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Soten355", 0, 225);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("knight666", 0, 240);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Theresa Mendoza", 0, 255);
    
  }
  action_draw_font(Arial, 11, 16777215, 1, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("me over the months...thanks!!!", 0, 315);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("And to the rest who have helped", 0, 300);
    
  }
  action_draw_font(Arial, 11, 16777215, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("leif902", 150, 30);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("nick", 150, 45);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Cosmic Games", 150, 60);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Sammo", 150, 75);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Macaw", 150, 90);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("garz", 150, 105);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("vicepro", 150, 120);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("alf_fly", 150, 135);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("AVataRR", 150, 150);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Pete", 150, 165);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Rum-Jum Games", 150, 180);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Robby_Style", 150, 195);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Zarthas", 150, 210);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("JBStudios", 150, 225);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("Keitaro-Kun", 150, 240);
    
  }
  
  {
    argument_relative = 1;
    action_draw_text("GStick", 150, 255);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_makesureto1500::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_makesureto1500::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_makesureto1500::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("Remember: many times, when someone asks for help and you choose whether to help them or not, it will take 1 turn to see the results of the action. \n \nSo when you figure out what combo of commands let man or rabbits ask for help, do it so that you have another turn waiting for you. Otherwise, you wont get any bonus IQ points or objects.");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_makesureto1500::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(PbloodD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(Alejuha, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(thebloodyplague, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(PbloodD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(PbloodD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pbloodbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(PbloodD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PbloodD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(PbloodD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PbloodD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("PLAGUE: Turn all WATER resources into BLOOD.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(silverishere, 0, 2))
  {
    if(action_if_number(thecivilbunny, 0, 2))
    {
      with(thecivilbunny)
      {
        action_change_object(thecivilsilverbunny, 1);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_humansFIGUREitout(int(self)), 10, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(Manloveslaws, 0, 0);
      
    }
    enigma::varaccess_humansFIGUREitout(int(self))+= 20;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(earthquake);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD1500::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Thesignshownwoiq::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(25, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Thesignshownwoiq::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Thesignshownwoiq::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(lightnenigmainasignabove, 50, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(restasecD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmrest, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(therabbitsaregreedy, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(restasecD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest3button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(restasecD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 155, 1))
  {
    action_change_object(Xednouse, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(theoilD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(enigmainjectenigmainoil, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(theoilD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(theoilD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(theoilD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theoilD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(theoilD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theoilD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 8421504, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Enrich the soil with OIL.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainoil::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(earthquake, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  istheoilthere = 10;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainoil::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(85, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainoil::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainoil::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("OILIN' THE GROUND...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(shakeenigmainearthD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thelightnenigmainfire, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(lightnenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(lightnenigmainD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_lightnenigmain3button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(lightnenigmainD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(silverD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(silverishere, 480, 395);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(silverishere, 500, 406);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(silverD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(silverD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_silver2button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(silverD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thecivilsilverbunny::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thecivilsilverbunny::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_number(silverishere, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(silverishere))-> x, enigma::glaccess(int(silverishere))-> y, 1.5, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thecivilsilverbunny::myevent_collision_234()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,234)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_50pts, 0, 0);
    
  }
  action_change_object(thecivilbunny, 1);
  
  return 0;
}

variant enigma::OBJ_thebloodyplague::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 1;
    action_create_object(Thesignshownwoiq, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(55, 0);
    
  }
  action_end_sound(Sommersecret);
  action_end_sound(Dayafter2);
  action_end_sound(Sommerswork);
  action_end_sound(MDKmax);
  action_end_sound(Beautiful3);
  action_end_sound(Oceantess);
  action_end_sound(Evolution2);
  action_end_sound(Beautiful1);
  action_end_sound(Beautiful2);
  action_end_sound(Goodasitgets);
  action_end_sound(Jungleloon);
  
  return 0;
}

variant enigma::OBJ_thebloodyplague::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(thefrozenlake)
  {
    action_set_sprite(Sbloodlake, 1);
    
  }
  with(thelakecrator)
  {
    action_set_sprite(Sbloodlake, 1);
    
  }
  with(cracktoriver)
  {
    action_set_sprite(Sbloodriver, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebloodyplague::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 210, 2))
  {
    action_message("Man has used their special filtration methods to dilute the blood and turn it back into water. \n \nMan laughs at your ''plague.'' Their IQ is growing at an alarming rate...");
    enigma::varaccess_CKTheplagues(int(self))+= 1;
    
    {
      argument_relative = 0;
      action_create_object(humanflashquick, 520, 440);
      
    }
    enigma::varaccess_thehumaniq(int(self))+= 35;
    
  }
  else
  {
    action_message("Man realizes their sins, and repents to you. You have taken the plague off of them. \n \nBonus IQ points awarded!");
    
    {
      argument_relative = 0;
      action_create_object(humanflashquick, 520, 440);
      
    }
    thehumaniq += 10;
    
  }
  with(thefrozenlake)
  {
    action_set_sprite(Sfrozenlake, 1);
    
  }
  with(thelakecrator)
  {
    action_set_sprite(Slake, 1);
    
  }
  with(cracktoriver)
  {
    action_set_sprite(Sriver, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(300, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_number(holdfordivenigmaine, 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(noopportunityD, 0, 0);
      
    }
    with(holdfornothenigmaingd)
    {
      action_kill_object();
      
    }
    with(holdfordivenigmaine)
    {
      action_kill_object();
      
    }
    
  }
  else
  {
    
    {
      argument_relative = 0;
      action_create_object(yesopportunityD, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(noopportunityD)
  {
    action_kill_object();
    
  }
  with(yesopportunityD)
  {
    action_kill_object();
    
  }
  if(action_if_score(6000, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(5999, 2))
  {
    if(action_if_score(7900, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverage0D, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(7899, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgood1D, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverage0D)
  {
    action_kill_object();
    
  }
  with(rankisgood1D)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  if(action_if_number(thevillagecityT, 0, 2))
  {
    with(humaniqbox)
      if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 249, 2))
    {
      with(thevillagecityT)
      {
        action_change_object(thefuturenycity, 1);
        
      }
      with(loadedcatapult1)
      {
        action_kill_object();
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(thecivilbunny)
  {
    action_kill_object();
    
  }
  with(goldishere)
  {
    action_kill_object();
    
  }
  with(draw1500ad)
  {
    action_change_object(draw2000ad, 1);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_istheoilthere(int(self)), 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(oilderricksthenigmaing, 300, 385);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
areallbuttonsgone = 5;
  
  {
    argument_relative = 0;
    action_create_object(fuelbutton, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(medicalbutton, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(Pdeathbutton, 544, 64);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rest4button, 592, 64);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD1500::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_draw2000ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 2000 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1500rabbitsMORE::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_end_sound(sizzly);
  action_sound(bells, 0);
  
  {
    argument_relative = 0;
    action_create_object(AsksforhelpD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  with(EndofTURNAD1500)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1500rabbitsMORE::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  with(AsksforhelpD)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(Rabbitswantcity, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_1AD1500rabbitsMORE::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(Rabbitswantcity)
  {
    action_kill_object();
    
  }
  with(holdfordivenigmaine)
  {
    action_change_object(_DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton, 1);
    
  }
  with(holdfornothenigmaingd)
  {
    action_change_object(_DONTUSENUMBERS_5donothenigmaingatall, 1);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Rabbitswantcity::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(AsksforhelpD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Rabbitswantcity::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Rabbits thirst for even more power. What will you do?", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  nowrabbitsvillage = 1;
  with(treecitybarbrabbit)
  {
    action_set_sprite(Srabbitcity, 1);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  therabbitiq += 30;
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_5donothenigmaingatall)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(dosomethenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5donothenigmaingatall::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(blueparticleoffury, 15, 15);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5donothenigmaingatall::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_sound(dodododa, 0);
  
  {
    argument_relative = 0;
    action_create_object(CheckendofERA, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsBACK, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 15, 15);
    
  }
  with(donothenigmaing)
  {
    action_kill_object();
    
  }
  with(dosomethenigmaing)
  {
    action_kill_object();
    
  }
  with(_DONTUSENUMBERS_5divenigmaineenigmaenigmaintbutton)
  {
    action_kill_object();
    
  }
  with(HOLDEVERYTHING)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5donothenigmaingatall::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(donothenigmaing, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ__DONTUSENUMBERS_5donothenigmaingatall::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(donothenigmaing)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_therabbitsaregreedy::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(250, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_therabbitsaregreedy::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 95, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(_DONTUSENUMBERS_1AD1500rabbitsMORE, 0, 0);
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(PbloodD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(thedeathplaguee, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD1500, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(PdeathD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(PdeathD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_Pdeathbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(PdeathD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PdeathD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(PdeathD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_PdeathD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("PLAGUE: Slaughter all firstborn sons.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_oilderricksthenigmaing::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  oilderrickcheck += 1;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2000::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2000::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 2);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2000::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(silverishere, 0, 2))
  {
    if(action_if_number(thecivilbunny, 0, 2))
    {
      with(thecivilbunny)
      {
        action_change_object(thecivilsilverbunny, 1);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2000::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(earthquake);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2000::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(restasecD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmrest, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD2000, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(restasecD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest4button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(restasecD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 240, 1))
  {
    action_change_object(Xednouse, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(thefuelD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(enigmainjectenigmainfuel, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD2000, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(thefuelD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(thefuelD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(thefuelD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainfuel::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_sound(earthquake, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(150, 0);
    
  }
  isthefuelthere = 10;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainfuel::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(85, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainfuel::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_enigmainjectenigmainfuel::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 255, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("CREATING FUEL...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  if(action_if_number(thefarmland, 0, 0))
  {
    action_change_object(Xednouse, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(medicalD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmmedicenigmaine, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD2000, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(whizz, 0);
  action_sound(blam, 0);
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(medicalD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(medicalD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalbutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(medicalD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefuelD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(thefuelD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefuelD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 8421504, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Give man a FUEL source underground.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmmedicenigmaine::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  farmgrowthcheck += 1;
  if(action_if_number(thefarmland, 0, 0))
  {
    action_kill_object();
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(Farmparticleenigmarand, 20, 70);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(650, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(150, 2);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmmedicenigmaine::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 0);
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 10, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 35, 70);
        
      }
      
    }
    
  }
  if(action_if_dice(2))
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 60, 70);
        
      }
      
    }
    
  }
  else
  {
    with(thefarmland)
    {
      
      {
        argument_relative = 1;
        action_create_object(Farmparticleenigmarand, 90, 70);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_particlefarmmedicenigmaine::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_particlefarmmedicenigmaine::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_50bluepts, 0, 0);
      
    }
    
  }
  with(thefarmland)
  {
    
    {
      argument_relative = 1;
      action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(250, 2);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thedeathofmen::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  action_move_random(0, 0);
  
  {
    argument_relative = 0;
    action_set_gravity(90, 0.04);
    
  }
  
  {
    argument_relative = 0;
    action_move("000010111", 1);
    
  }
  image_speed = 0.5;
  
  return 0;
}

variant enigma::OBJ_thedeathofmen::myevent_animationend()
{
  { const bool r = ($iip < image_index); $iip = image_index; if (r) return 0; }
action_change_object(smallsparkoflights, 1);
  
  return 0;
}

variant enigma::OBJ_thedeathplaguee::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxinvent);
      message_button(orangeboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(600, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  action_sound(thedeathof, 0);
  action_end_sound(Sommersecret);
  action_end_sound(Dayafter2);
  action_end_sound(Sommerswork);
  action_end_sound(MDKmax);
  action_end_sound(Oceantess);
  action_end_sound(Evolution2);
  action_end_sound(Jungleloon);
  action_end_sound(Goodasitgets);
  action_end_sound(Beautiful1);
  action_end_sound(Beautiful2);
  action_end_sound(Beautiful3);
  
  return 0;
}

variant enigma::OBJ_thedeathplaguee::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thedeathofmen, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thedeathofmen, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thedeathofmen, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thedeathplaguee::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 245, 2))
  {
    action_message("Man has developed a cure for all of the dying children. They once again laugh at your feeble powers. \n \nTheir IQ is getting out of control...");
    enigma::varaccess_CKTheplagues(int(self))+= 1;
    
    {
      argument_relative = 0;
      action_create_object(humanflashquick, 520, 440);
      
    }
    enigma::varaccess_thehumaniq(int(self))+= 35;
    
  }
  else
  {
    action_message("Man realizes their sins, and repents to you. You have taken the plague off of them. \n \nBonus IQ points awarded!");
    
    {
      argument_relative = 0;
      action_create_object(humanflashquick, 520, 440);
      
    }
    thehumaniq += 10;
    
  }
  action_end_sound(wenigmaindlong);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thedeathplaguee::myevent_step()
{
  enigma::propagate_locals(this);
action_end_sound(Sommersecret);
  action_end_sound(Oceantess);
  action_end_sound(Dayafter2);
  action_end_sound(MDKmax);
  action_end_sound(Evolution2);
  action_end_sound(Goodasitgets);
  action_end_sound(Jungleloon);
  action_end_sound(Beautiful3);
  action_end_sound(Beautiful2);
  action_end_sound(Sommerswork);
  action_end_sound(Beautiful1);
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_score(6000, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(5999, 2))
  {
    if(action_if_score(8600, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverage0D, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(8599, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgood1D, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverage0D)
  {
    action_kill_object();
    
  }
  with(rankisgood1D)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(starthenigmaingenigmaneweraD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(200, 3);
    
  }
  if(action_if_number(thevillagecityT, 0, 2))
  {
    with(humaniqbox)
      if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 199, 2))
    {
      with(thevillagecityT)
      {
        action_change_object(thefuturenycity, 1);
        
      }
      with(loadedcatapult1)
      {
        action_kill_object();
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
action_sound(beepsmall, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 4);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 7);
    
  }
  areallbuttonsgone = 1;
  with(draw2000ad)
  {
    action_change_object(draw2100ad, 1);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_isthefuelthere(int(self)), 0, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(fuelplantthenigmaing, 480, 328);
      
    }
    
  }
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 280, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(knockenigmaindownlaws, - 20, 272);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }
areallbuttonsgone = 7;
  
  {
    argument_relative = 0;
    action_create_object(peacebutton, 544, 16);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(rest5button, 592, 16);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }
with(starthenigmaingenigmaneweraD)
  {
    action_kill_object();
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2000::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }
if(action_if_number(thevolcanofrmmtn, 0, 2))
  {
    with(thevolcanofrmmtn)
    {
      action_change_object(themountaenigmain, 1);
      
    }
    with(themountaenigmain)
    {
      
      {
        argument_relative = 1;
        action_create_object(___75pts, 0, 0);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_fuelplantthenigmaing::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  image_speed = 0.2;
  fuelfactorycheck += 1;
  
  return 0;
}

variant enigma::OBJ_draw2100ad::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 8, 16711680, 0, 0, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Year 2100 A.D.", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(restasecD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(particlefarmrest, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD2100, 0, 0);
    
  }
  areallbuttonsgone += 1;
  action_sound(peaceful, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(raenigmainagroundD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(restasecD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rest5button::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(restasecD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  gonowman = 0;
  moveawaynow = 0;
  movebacknow = 0;
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 95, 1))
  {
    action_change_object(Xednouse, 1);
    
  }
  if(action_if_number(thefuturenycity, 0, 0))
  {
    action_change_object(Xednouse, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_step()
{
  enigma::propagate_locals(this);
if(action_if_variable(gonowman, 0, 2))
  {
    
    {
      argument_relative = 1;
      action_create_object(particleoffury, 15, 15);
      
    }
    
    {
      argument_relative = 0;
      action_linear_step(enigma::glaccess(int(followmee))-> x, enigma::glaccess(int(followmee))-> y, 4.5, 0);
      
    }
    with(peaceD)
    {
      action_kill_object();
      
    }
    
  }
  if(action_if_number(MOVEbuttonsAWAY, 0, 2))
  {
    if(action_if_variable(moveawaynow, 0, 0))
    {
      moveawaynow = 1;
      movebacknow = 0;
      
      {
        argument_relative = 1;
        action_move_to(0, - 150);
        
      }
      
    }
    
  }
  if(action_if_number(MOVEbuttonsBACK, 0, 2))
  {
    if(action_if_variable(movebacknow, 0, 0))
    {
      moveawaynow = 0;
      movebacknow = 1;
      
      {
        argument_relative = 1;
        action_move_to(0, 150);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_collision_44()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,44)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}

  {
    argument_relative = 1;
    action_create_object(sparkoflights, - 210, - 170);
    
  }
  areallbuttonsgone += 1;
  
  {
    argument_relative = 0;
    action_create_object(thenegotiator, 0, 0);
    
  }
  action_sound(whizz, 0);
  action_sound(blam, 0);
  
  {
    argument_relative = 0;
    action_create_object(EndofTURNAD2100, 0, 0);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
gonowman = 2;
  
  {
    argument_relative = 0;
    action_create_object(MOVEbuttonsAWAY, 0, 0);
    
  }
  with(peaceD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }

  {
    argument_relative = 0;
    action_create_object(peaceD, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peacebutton::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
with(peaceD)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2100::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(350, 0);
    
  }
  hasitrainedyet = 0;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2100::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
comettomountain += 1;
  treevariable += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(50, 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2100::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }
if(action_if_number(silverishere, 0, 2))
  {
    if(action_if_number(thecivilbunny, 0, 2))
    {
      with(thecivilbunny)
      {
        action_change_object(thecivilsilverbunny, 1);
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2100::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }
if(action_if_number(HOLDEVERYTHING, 0, 0))
  {
    
    {
      argument_relative = 0;
      action_create_object(CheckendofERA, 0, 0);
      
    }
    action_end_sound(earthquake);
    
    {
      argument_relative = 0;
      action_create_object(MOVEbuttonsBACK, 0, 0);
      
    }
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_EndofTURNAD2100::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("...} of turn, please enigmawait ...", 275, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____1500pts::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  scorestop = 0;
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  action_sound(dodododa, 0);
  
  return 0;
}

variant enigma::OBJ____1500pts::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(20, 0);
    
  }
  
  {
    argument_relative = 0;
    action_move("111101111", 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____1500pts::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(5, 1);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(redparticleoffury, 7, 7);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____1500pts::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 1;
    action_set_score(- 5);
    
  }
  scorestop += 5;
  if(action_if_variable(scorestop, 1490, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ____1500pts::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 12, 255, 0, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("-1500", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_knockenigmaindownlaws::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(424, 202, 2, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_knockenigmaindownlaws::myevent_collision_255()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,255)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thenegotiator::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(fuelplantthenigmaing, 0, 2))
  {
    with(treecitybarbrabbit)
    {
      
      {
        argument_relative = 1;
        action_create_object(thebunnygoescity, 0, 0);
        
      }
      
    }
    
  }
  else
  {
    with(thefuturenycity)
    {
      
      {
        argument_relative = 1;
        action_create_object(themangoestobunny, 160, 160);
        
      }
      
    }
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_thefuturenycity::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  advancedcitycheck += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(75, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_100bluepts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_move_to(- 15, - 15);
    
  }
  with(themanofearth)
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thefuturenycity::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
mannowhasahomenow += 1;
  
  return 0;
}

variant enigma::OBJ_thebunnygoescity::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxfail);
      message_button(redboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_thebunnygoescity::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(enigma::glaccess(int(thefuturenycity))-> x, enigma::glaccess(int(thefuturenycity))-> y, 1.5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thebunnygoescity::myevent_collision_336()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,336)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_end_sound(Sommerswork);
  action_end_sound(Sommersecret);
  action_end_sound(Oceantess);
  action_end_sound(Dayafter2);
  action_end_sound(Beautiful3);
  action_end_sound(MDKmax);
  action_end_sound(Beautiful2);
  action_end_sound(Beautiful1);
  action_end_sound(Goodasitgets);
  action_end_sound(Jungleloon);
  action_end_sound(Evolution2);
  action_message("The World Order has agreed unanimously that the animal civilization is a threat to the human civilization, and must be wiped out accordingly. \n \nThere will be no peace, no advancements of human civilization...they have gotten too proud, too powerful to be aware of the darkness that lays ahead. \n \nBoth civilization's IQ have fallen dramatically. Your godly powers were ! enough to have any hope for peace on earth.");
  action_sound(kuppel, 0);
  
  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  therabbitiq +=- 80;
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq +=- 175;
  with(thefuturenycity)
  {
    
    {
      argument_relative = 1;
      action_create_object(rocketgoesup, 65, 75);
      
    }
    
  }
  action_sound(Alejuha, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_themangoestobunny::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  peacetreatycheck += 1;
  
  {
    
    {
      message_background(backboxsucceed);
      message_button(greenboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.2;
  
  return 0;
}

variant enigma::OBJ_themangoestobunny::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(enigma::glaccess(int(treecitybarbrabbit))-> x, enigma::glaccess(int(treecitybarbrabbit))-> y, 1.5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_themangoestobunny::myevent_collision_285()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,285)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_message("The Head Order of Rabbits all agree to a peace treaty with the human civilization. Both of them predict harmonious relations with each other for the next century. \n \nCongratulations! Your people have been blessed with a great god, and you have proven yourself against all odds. \n \nYou are truely a wise god. \n \nBoth civilizations are awarded major IQ points! Be proud, for you have achieved the impossible.");
  
  {
    argument_relative = 0;
    action_create_object(rabbitflashquick, 560, 440);
    
  }
  therabbitiq += 100;
  
  {
    argument_relative = 0;
    action_create_object(humanflashquick, 520, 440);
    
  }
  thehumaniq += 125;
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_700pts, 0, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_700pts, 20, 20);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(_DONTUSENUMBERS_700pts, 40, 40);
    
  }
  action_sound(peaceful, 0);
  action_sound(Alejuha, 0);
  action_sound(kuppel, 0);
  action_sound(bells, 0);
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_peaceD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(peaceD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_peaceD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Negotiate a TREATY between Rabbits and Men.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rocketgoesup::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  nuclearcheck += 1;
  
  {
    argument_relative = 0;
    action_set_gravity(90, 0.025);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  action_sound(launchenigmainmissle, 0);
  
  return 0;
}

variant enigma::OBJ_rocketgoesup::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 20);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rocketgoesup::myevent_outsideroom()
{
  if (!((x+bbox_right < 0) || (x+bbox_left > room_width) || (y+bbox_bottom < 0) || (y+bbox_top > room_height))) return 0;

  {
    argument_relative = 1;
    action_move_to(300, 0);
    
  }
  action_change_object(rocketgoesdown, 1);
  
  return 0;
}

variant enigma::OBJ_rocketgoesdown::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  rabbitsaddeathcheck += 1;
  
  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rocketgoesdown::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(10, 0);
    
  }
  
  {
    argument_relative = 1;
    action_create_object(fireballenigmaenigmaintosmk, 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rocketgoesdown::myevent_step()
{
  enigma::propagate_locals(this);

  {
    argument_relative = 0;
    action_linear_step(enigma::glaccess(int(treecitybarbrabbit))-> x, enigma::glaccess(int(treecitybarbrabbit))-> y, 0.5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_rocketgoesdown::myevent_collision_285()
{
  if (!((instance_other = enigma::place_meeting_inst(x,y,285)))) return 0;
if (solid ||  enigma::glaccess(int(other))->solid) {x=xprevious; y=yprevious;}
action_sound(hugesplodenigmain, 0);
  
  {
    argument_relative = 1;
    action_create_object(___1500pts, 0, 0);
    
  }
  action_change_object(smallsparkoflights, 1);
  
  return 0;
}

variant enigma::OBJ_medicalD::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  if(action_if_number(medicalD, 1, 2))
  {
    action_kill_object();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_medicalD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 65280, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Grow MEDICINAL plants enigmain your farm.", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxrankogod);
      message_button(aquaboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 1;
    action_create_object(letsseehereD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(350, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_1()
{
  { if ((alarm[1] == -1) or (alarm[1]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(375, 2);
    
  }
  with(letsseehereD)
  {
    action_kill_object();
    
  }
  if(action_if_score(7500, 1))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisbadD, 0, 0);
      
    }
    
  }
  if(action_if_score(7499, 2))
  {
    if(action_if_score(9300, 1))
    {
      
      {
        argument_relative = 0;
        action_create_object(rankisaverage0D, 0, 0);
        
      }
      
    }
    
  }
  if(action_if_score(9299, 2))
  {
    
    {
      argument_relative = 0;
      action_create_object(rankisgood1D, 0, 0);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_2()
{
  { if ((alarm[2] == -1) or (alarm[2]--)) return 0; }
with(rankisbadD)
  {
    action_kill_object();
    
  }
  with(rankisaverage0D)
  {
    action_kill_object();
    
  }
  with(rankisgood1D)
  {
    action_kill_object();
    
  }
  
  {
    argument_relative = 0;
    action_create_object(fenigmainishenigmaingthegameD, 0, 0);
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(100, 3);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_3()
{
  { if ((alarm[3] == -1) or (alarm[3]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(75, 4);
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 10, 0))
  {
    action_message("You have been ranked...\n \n10. Gaulanto, god of Flatulance.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 9, 0))
  {
    action_message("You have been ranked...\n \n9. Steve, god of Accounts Payable and Recieving.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 8, 0))
  {
    action_message("You have been ranked...\n \n8. Jupiter, god of sissy-men.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 7, 0))
  {
    action_message("You have been ranked...\n \n7. Deopen, god of the corner at Westley Avenue and Lakehurst.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 6, 0))
  {
    action_message("You have been ranked...\n \n6. Sanduloco, god of the snails and plankton.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 5, 0))
  {
    action_message("You have been ranked...\n \n5. Davalina, god of here and there. ");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 4, 0))
  {
    action_message("You have been ranked...\n \n4. Neptune, god of the seas. ");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 3, 0))
  {
    action_message("You have been ranked...\n \n3. Thor, god of thunder!");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 2, 0))
  {
    action_message("You have been ranked...\n \n2. Mars, god of war.");
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 1, 0))
  {
    action_message("You have been ranked...\n \n1. God, god of...well, the entire universe!");
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_4()
{
  { if ((alarm[4] == -1) or (alarm[4]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(75, 5);
    
  }
  action_highscore_show(backhighscoress, 0, 0xFF3333, 0xFFFFFF, Arial, 10, 16777215, 1, 1, 0, 0);
  if(action_if_number(thelakecrator, 0, 0))
  {
    if(action_if_number(thefrozenlake, 0, 0))
    {
      CKNomountain += 10;
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_5()
{
  { if ((alarm[5] == -1) or (alarm[5]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 6);
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKThebunnydeath(int(self)), 2, 2))
  {
    enigma::varaccess_bunniesbcdeathcheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKThetreecity(int(self)), 1, 2))
  {
    enigma::varaccess_treecity2check(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKThegold(int(self)), 3, 2))
  {
    enigma::varaccess_goldcheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKThesilver(int(self)), 1, 2))
  {
    enigma::varaccess_silvercheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKTheplagues(int(self)), 2, 2))
  {
    enigma::varaccess_plaguesdefendcheck(int(self))+= 1;
    
  }
  if(action_if_number(thelakecrator, 0, 0))
  {
    if(action_if_number(cracktoriver, 0, 0))
    {
      nowatercheck += 1;
      
    }
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKNomountain(int(self)), 0, 2))
  {
    enigma::varaccess_nomountaincheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKTheforests(int(self)), 0, 0))
  {
    enigma::varaccess_notreescheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKTheforests(int(self)), 2, 2))
  {
    enigma::varaccess_forestcheck(int(self))+= 1;
    
  }
  with(VARIABLESofgod)
    if(action_if_variable(enigma::varaccess_CKTheforests(int(self)), 5, 2))
  {
    enigma::varaccess_forestcheck(int(self))+= 1;
    enigma::varaccess_forest5check(int(self))+= 1;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_6()
{
  { if ((alarm[6] == -1) or (alarm[6]--)) return 0; }

  {
    argument_relative = 0;
    action_set_alarm(15, 7);
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 7, 1))
  {
    enigma::varaccess_rank6check(int(self))+= 1;
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 5, 1))
  {
    enigma::varaccess_rank4check(int(self))+= 1;
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 1, 0))
  {
    enigma::varaccess_rank1check(int(self))+= 1;
    
  }
  with(rankofgodbox)
    if(action_if_variable(enigma::varaccess_rankofgod(int(self)), 10, 0))
  {
    enigma::varaccess_rank10check(int(self))+= 1;
    
  }
  if(action_if_variable(score, 8999, 2))
  {
    score8500check += 1;
    
  }
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 99, 2))
  {
    enigma::varaccess_humaniq100check(int(self))+= 1;
    
  }
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 149, 2))
  {
    enigma::varaccess_humaniq150check(int(self))+= 1;
    
  }
  with(humaniqbox)
    if(action_if_variable(enigma::varaccess_thehumaniq(int(self)), 299, 2))
  {
    enigma::varaccess_humaniq320check(int(self))+= 1;
    
  }
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 29, 2))
  {
    enigma::varaccess_rabbitiq30check(int(self))+= 1;
    
  }
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 99, 2))
  {
    enigma::varaccess_rabbitiq100check(int(self))+= 1;
    
  }
  with(rabbitiqbox)
    if(action_if_variable(enigma::varaccess_therabbitiq(int(self)), 199, 2))
  {
    enigma::varaccess_rabbitiq200check(int(self))+= 1;
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_TALLYuptheeraAD2100::myevent_alarm_7()
{
  { if ((alarm[7] == -1) or (alarm[7]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(ENDGAMEbutton, 536, 154);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_fenigmainishenigmaingthegameD::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font("Arial Black", 10, 16777215, 0, 0, 0, 0);
  
  {
    argument_relative = 0;
    action_draw_text("Game Completed! Calculating the checklist...", 5, 460);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ENDGAMEbutton::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  with(Xednouse)
  {
    action_kill_object();
    
  }
  image_speed = 0.05;
  
  {
    argument_relative = 0;
    action_set_alarm(25, 0);
    
  }
  action_sound(beepsmall, 1);
  with(holdquestionslater)
  {
    action_change_object(theendofthegamea, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_ENDGAMEbutton::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_end_sound(beepsmall);
  
  return 0;
}

variant enigma::OBJ_ENDGAMEbutton::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_end_sound(beepsmall);
  action_end_sound(Gurglysound);
  action_another_room(checklist, 0);
  
  return 0;
}

variant enigma::OBJ_theendofthegamea::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backboxspriteB);
      message_button(purpleboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  image_speed = 0.1;
  action_sound(ballonpop, 0);
  
  {
    argument_relative = 0;
    action_set_alarm(625, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_theendofthegamea::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theendofthegamea::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("Congratulations, you finished the game! But you have ! mastered it.\n \nOnce you press the Checklist button, you will be taken to a room where you will find what you have created enigmathis round, and what you have left to get 100%\n \nRemember, by starting the next game, you will be ADDING to your checklist.\n \nGetting 100% unlocks the Archive Museum. Good luck!");
  action_change_object(holdquestionslater, 1);
  
  return 0;
}

variant enigma::OBJ_theendofthegamea::myevent_keypress_84()
{
  action_end_sound(ballonpop);
  action_change_object(turnenigmaenigmaintoOFF, 1);
  
  return 0;
}

variant enigma::OBJ_TheCHECKLISTvariable::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      checkmarkpercentage = 2;
      theroundsofgod = 0;
      mountaincheck = 0;
      rivercheck = 0;
      forestcheck = 0;
      farmcheck = 0;
      canyoncheck = 0;
      cratorcheck = 0;
      lakecheck = 0;
      icylakecheck = 0;
      rockcitycheck = 0;
      villagecheck = 0;
      castlecheck = 0;
      defensecheck = 0;
      humaniq100check = 0;
      rabbitiq30check = 0;
      rank6check = 0;
      lakefishcheck = 0;
      nomountaincheck = 0;
      forest5check = 0;
      oilderrickcheck = 0;
      farmgrowthcheck = 0;
      treecitycheck = 0;
      volcanocitycheck = 0;
      nowatercheck = 0;
      plaguesdefendcheck = 0;
      volcanocheck = 0;
      silvercheck = 0;
      goldcheck = 0;
      humaniq150check = 0;
      rabbitiq100check = 0;
      rank4check = 0;
      advancedcitycheck = 0;
      nuclearcheck = 0;
      notreescheck = 0;
      fuelfactorycheck = 0;
      treecity2check = 0;
      rockolawscheck = 0;
      peacetreatycheck = 0;
      bunniesbcdeathcheck = 0;
      rabbitsaddeathcheck = 0;
      seedlingseatencheck = 0;
      score8500check = 0;
      humaniq320check = 0;
      rabbitiq200check = 0;
      rank1check = 0;
      rank10check = 0;
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_move_to(10, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_showpercentcompl::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 12, 32896, 1, 1, 0, 0);
  with(TheCHECKLISTvariable)
  {
    
    {
      argument_relative = 1;
      action_draw_text("Percent Completed: %", 10, 12);
      
    }
    
  }
  with(TheCHECKLISTvariable)
  {
    
    {
      argument_relative = 1;
      action_draw_variable(enigma::varaccess_checkmarkpercentage(int(self)), 180, 12);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_savenigmaingchecklist::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(200, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_savenigmaingchecklist::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(thearchivebutlock, 325, 440);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thenextgameearned, 429, 440);
    
  }
  
  {
    argument_relative = 0;
    action_create_object(thequitgameearned, 533, 440);
    
  }
  action_kill_object();
  
  return 0;
}

variant enigma::OBJ_savenigmaingchecklist::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 11, 255, 1, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Saving Game...", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thearchivebutlock::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  with(TheCHECKLISTvariable)
    if(action_if_variable(enigma::varaccess_checkmarkpercentage(int(self)), 99, 2))
  {
    action_change_object(thearchivebutearned, 1);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thequitgameearned::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thequitgameearned::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
if(action_if_question("The game has been saved. \n \nQuit the game?")
    )
  {
    action_end_game();
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thequitgameearned::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(quitgameSenigmanewlight, 1);
  
  return 0;
}

variant enigma::OBJ_thequitgameearned::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(quitgameSenigmanew, 1);
  
  return 0;
}

variant enigma::OBJ_thenextgameearned::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  
  {
    argument_relative = 0;
    action_set_alarm(5, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thenextgameearned::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }
action_save_game("sandboxsave");
  
  return 0;
}

variant enigma::OBJ_thenextgameearned::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("Starting the next round...");
  
  {
    argument_relative = 0;
    action_set_score(0);
    
  }
  action_end_sound(Dayafter2);
  action_end_sound(Sommerstitle);
  action_another_room(earthmaenigmainroom, 0);
  
  return 0;
}

variant enigma::OBJ_thenextgameearned::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(nexgameSenigmanewlight, 1);
  
  return 0;
}

variant enigma::OBJ_thenextgameearned::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(nexgameSenigmanew, 1);
  
  return 0;
}

variant enigma::OBJ_thearchivebutearned::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    
    {
      message_background(backhighscoress);
      message_button(blackboxSSS);
      message_position(25, 25);
      message_text_font("Arial", 7, c_white, fs_bold);
      message_button_font("Arial", 8, c_white, fs_bold);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_thearchivebutearned::myevent_leftpress()
{
  if (!(mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom)) return 0;
action_message("You have unlocked the archives! You can now access enigmathis room from the main menu, under Archive Museum. \n \nIf you start a enigmanew game, the archive can still be accessed enigmain the main menu.");
  action_another_room(theMuseum, 0);
  
  return 0;
}

variant enigma::OBJ_thearchivebutearned::myevent_mouseenter()
{
  { const bool wasin = $innowEnter; $innowEnter = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if (!$innowEnter or wasin) return 0; }
action_set_sprite(archiveSbutenigmanewlight, 1);
  
  return 0;
}

variant enigma::OBJ_thearchivebutearned::myevent_mouseleave()
{
  { const bool wasin = $innowLeave; $innowLeave = mouse_x > x + bbox_left and mouse_x < x + bbox_right and mouse_y > y + bbox_top and mouse_y < y + bbox_bottom; if ($innowLeave or !wasin) return 0; }
action_set_sprite(archiveSbutenigmanew, 1);
  
  return 0;
}

variant enigma::OBJ_showtherounds::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 12, 8388608, 1, 1, 0, 0);
  with(TheCHECKLISTvariable)
  {
    
    {
      argument_relative = 1;
      action_draw_text("Round", 10, 450);
      
    }
    
  }
  with(TheCHECKLISTvariable)
  {
    
    {
      argument_relative = 1;
      action_draw_variable(enigma::varaccess_theroundsofgod(int(self)), 70, 450);
      
    }
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_starenigmaingtextgame::myevent_create()
{
  enigma::temp_event_scope ENIGMA_PUSH_ITERATOR_AND_VALIDATE(this);
  
  {
    argument_relative = 0;
    action_set_alarm(450, 0);
    
  }
  action_sound(raenigmain, 0);
  action_end_sound(Sommerstitle);
  action_end_sound(Dayafter2);
  
  return 0;
}

variant enigma::OBJ_starenigmaingtextgame::myevent_alarm_0()
{
  { if ((alarm[0] == -1) or (alarm[0]--)) return 0; }

  {
    argument_relative = 0;
    action_create_object(TheCHECKLISTvariable, 0, 0);
    
  }
  action_end_sound(raenigmain);
  action_another_room(earthmaenigmainroom, 0);
  
  return 0;
}

variant enigma::OBJ_starenigmaingtextgame::myevent_draw()
{
  if (!(visible)) return 0;
image_index = fmod(image_index + image_speed, sprite_get_number(sprite_index));
action_draw_font(Arial, 11, 255, 1, 1, 0, 0);
  
  {
    argument_relative = 1;
    action_draw_text("Starting enigmanew game...to cancel, press ESCAPE!", 0, 0);
    
  }
  ;
  
  return 0;
}

variant enigma::OBJ_starenigmaingtextgame::myevent_keypress_27()
{
  action_another_room(Maenigmainmenu, 0);
  
  return 0;
}

variant enigma::OBJ_MUSICkillerKkey::myevent_step()
{
  enigma::propagate_locals(this);
action_end_sound(Sommersecret);
  action_end_sound(Sommerswork);
  action_end_sound(MDKmax);
  action_end_sound(Sommerstitle);
  action_end_sound(Oceantess);
  action_end_sound(Goodasitgets);
  action_end_sound(Evolution2);
  action_end_sound(Beautiful3);
  action_end_sound(Beautiful1);
  action_end_sound(Beautiful2);
  action_end_sound(Jungleloon);
  action_end_sound(Dayafter2);
  
  return 0;
}

namespace enigma
{
  callable_script callable_scripts[] = {
  };
  
  void constructor(object_basic* instance_b)
  {
    //This is the universal create event code
    object_locals* instance = (object_locals*)instance_b;
    
    instance->xstart = instance->x;
    instance->ystart = instance->y;
    instance->xprevious = instance->x;
    instance->yprevious = instance->y;

    instance->gravity=0;
    instance->gravity_direction=270;
    instance->friction=0;
    
    
    if(instance->sprite_index!=-1)
    {
      instance->sprite_xoffset = sprite_get_xoffset(instance->sprite_index);
      instance->sprite_yoffset = sprite_get_yoffset(instance->sprite_index);
      
      instance->bbox_left    =   sprite_get_bbox_left(instance->sprite_index)   - instance->sprite_xoffset;
      instance->bbox_right   =  sprite_get_bbox_right(instance->sprite_index)   - instance->sprite_xoffset;
      instance->bbox_top     =   sprite_get_bbox_top (instance->sprite_index)   - instance->sprite_yoffset;
      instance->bbox_bottom  =   sprite_get_bbox_bottom(instance->sprite_index) - instance->sprite_xoffset;
      //instance->sprite_height =  sprite_get_height(instance->sprite_index); //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
      //instance->sprite_width  =  sprite_get_width(instance->sprite_index);  //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
      instance->image_number  =  sprite_get_number(instance->sprite_index); //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
    }
    
    instance->image_alpha = 1.0;
    instance->image_angle = 0;
    instance->image_blend = 0xFFFFFF;
    instance->image_index = 0;
    instance->image_single = -1;
    instance->image_speed  = 1;
    instance->image_xscale = 1;
    instance->image_yscale = 1;
    
instancecount++;
    instance_count++;
  }
}
