/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

variant _SCR_d3d_point_distance()
{
  
  {
    var x1, y1, z1, x2, y2, z2, pdis1, pdis2;
    x1 = argument0;
    y1 = argument1;
    z1 = argument2;
    x2 = argument3;
    y2 = argument4;
    z2 = argument5;
    pdis1 = point_distance(x1, y1, x2, y2);
    pdis2 = enigma_max(z1, z2)- enigma_min(z1, z2);
    return(sqrt(sqr(pdis1)+ sqr(pdis2)));
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_point_direction()
{
  
  {
    var x1, y1, z1, x2, y2, z2, pdis, pdir;
    x1 = argument0;
    y1 = argument1;
    z1 = argument2;
    x2 = argument3;
    y2 = argument4;
    z2 = argument5;
    pdis = point_distance(x1, y1, x2, y2);
    pdir = point_direction(0, z1, pdis, z2);
    return(- pdir);
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_cone()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument6;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      d3d_primitive_begin(pr_linelist);
      for(enigma::varaccess_a(int(self))= 1; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self))+ 1; enigma::varaccess_a(int(self))+= 1)
      {
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        d3d_vertex_color(mean(argument3, argument0), mean(argument4, argument1), argument2, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        
      }
      d3d_primitive_end();
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_cylinder()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument6;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      d3d_primitive_begin(pr_linelist);
      for(enigma::varaccess_a(int(self))= 1; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self))+ 1; enigma::varaccess_a(int(self))+= 1)
      {
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, argument7, 1);
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, argument7, 1);
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, argument7, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument10, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
        if(argument8 == 1)
        {
          d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, argument7, 1);
          enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x((argument3 - argument0)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
          enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y((argument4 - argument1)/ (double) 2 * argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
          d3d_vertex_color(mean(argument3, argument0)+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), mean(argument4, argument1)- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, argument7, 1);
          
        }
        
      }
      d3d_primitive_end();
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_floor()
{
  with(self)
  {
    
    {
      for(enigma::varaccess_i(int(self))= 0; enigma::varaccess_i(int(self))<= 20; enigma::varaccess_i(int(self))+= 1)
      {
        d3d_primitive_begin(pr_linelist);
        for(enigma::varaccess_j(int(self))= 0; enigma::varaccess_j(int(self))<= 20; enigma::varaccess_j(int(self))+= 1)
        {
          d3d_vertex(enigma::varaccess_i(int(self))* 32, enigma::varaccess_j(int(self))* 32, 1);
          d3d_vertex((enigma::varaccess_i(int(self))+ 1)* 32, enigma::varaccess_j(int(self))* 32, 1);
          d3d_vertex((enigma::varaccess_i(int(self))+ 1)* 32, enigma::varaccess_j(int(self))* 32, 1);
          d3d_vertex((enigma::varaccess_i(int(self))+ 1)* 32, (enigma::varaccess_j(int(self))+ 1)* 32, 1);
          d3d_vertex((enigma::varaccess_i(int(self))+ 1)* 32, (enigma::varaccess_j(int(self))+ 1)* 32, 1);
          d3d_vertex(enigma::varaccess_i(int(self))* 32, (enigma::varaccess_j(int(self))+ 1)* 32, 1);
          d3d_vertex(enigma::varaccess_i(int(self))* 32, (enigma::varaccess_j(int(self))+ 1)* 32, 1);
          d3d_vertex(enigma::varaccess_i(int(self))* 32, enigma::varaccess_j(int(self))* 32, 1);
          d3d_vertex(enigma::varaccess_i(int(self))* 32, enigma::varaccess_j(int(self))* 32, 1);
          d3d_vertex((enigma::varaccess_i(int(self))+ 1)* 32, (enigma::varaccess_j(int(self))+ 1)* 32, 1);
          
        }
        d3d_primitive_end();
        
      }
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_block()
{
  d3d_primitive_begin(pr_linelist);
  d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument0, argument4, argument5, argument6, 1);
  if(argument7 == 1)
  {
    d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
    d3d_vertex_color(argument3, argument1, argument2, argument6, 1);
    d3d_vertex_color(argument0, argument4, argument2, argument6, 1);
    d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
    d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
    d3d_vertex_color(argument0, argument4, argument5, argument6, 1);
    d3d_vertex_color(argument3, argument1, argument5, argument6, 1);
    d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
    d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
    d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
    d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
    d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
    
  }
  d3d_primitive_end();
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_triangle()
{
  
  {
    d3d_primitive_begin(pr_linelist);
    d3d_vertex_color(argument0, argument1, argument2, argument9, 1);
    d3d_vertex_color(argument3, argument4, argument5, argument9, 1);
    d3d_vertex_color(argument3, argument4, argument5, argument9, 1);
    d3d_vertex_color(argument6, argument7, argument8, argument9, 1);
    d3d_vertex_color(argument6, argument7, argument8, argument9, 1);
    d3d_vertex_color(argument0, argument1, argument2, argument9, 1);
    d3d_primitive_end();
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_wireframe_draw_wall_floor()
{
  d3d_primitive_begin(pr_linelist);
  d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument2, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument5, argument6, 1);
  d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
  if(argument7 == 1)
  {
    d3d_vertex_color(argument0, argument1, argument2, argument6, 1);
    d3d_vertex_color(argument3, argument4, argument5, argument6, 1);
    
  }
  d3d_primitive_end();
  
  return 0;
}

variant _SCR_d3d_draw_pipe()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument6;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      enigma::varaccess_xrad(int(self))=(argument3 - argument0)/ (double) 2;
      enigma::varaccess_yrad(int(self))=(argument4 - argument1)/ (double) 2;
      enigma::varaccess_size2(int(self))= argument8;
      enigma::varaccess_xmean(int(self))= mean(argument3, argument0);
      enigma::varaccess_ymean(int(self))= mean(argument4, argument1);
      draw_set_color(argument7);
      for(enigma::varaccess_a(int(self))= 1; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self))+ 1; enigma::varaccess_a(int(self))+= 1)
      {
        d3d_primitive_begin(pr_trianglelist);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        d3d_primitive_end();
        d3d_primitive_begin(pr_trianglelist);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        d3d_primitive_end();
        d3d_primitive_begin(pr_trianglestrip);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1);
        d3d_primitive_end();
        d3d_primitive_begin(pr_trianglestrip);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1);
        d3d_primitive_end();
        
      }
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_model_pipe()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument6;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      enigma::varaccess_xrad(int(self))=(argument3 - argument0)/ (double) 2;
      enigma::varaccess_yrad(int(self))=(argument4 - argument1)/ (double) 2;
      enigma::varaccess_size2(int(self))= argument8;
      enigma::varaccess_xmean(int(self))= mean(argument3, argument0);
      enigma::varaccess_ymean(int(self))= mean(argument4, argument1);
      draw_set_color(argument7);
      texture_set_repeat(1);
      for(enigma::varaccess_a(int(self))= 1; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self))+ 1; enigma::varaccess_a(int(self))+= 1)
      {
        d3d_model_primitive_begin(argument9, pr_trianglelist);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        d3d_model_primitive_end(argument9);
        d3d_model_primitive_begin(argument9, pr_trianglelist);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self))* 2.5, 0);
        d3d_model_primitive_end(argument9);
        d3d_model_primitive_begin(argument9, pr_trianglestrip);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        d3d_model_primitive_end(argument9);
        d3d_model_primitive_begin(argument9, pr_trianglestrip);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* enigma::varaccess_size2(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_model_vertex_normal_texture(argument9, enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        d3d_model_primitive_end(argument9);
        
      }
      texture_set_repeat(0);
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_draw_cylinder_ext()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument6;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      enigma::varaccess_xrad(int(self))=(argument3 - argument0)/ (double) 2;
      enigma::varaccess_yrad(int(self))=(argument4 - argument1)/ (double) 2;
      enigma::varaccess_xmean(int(self))= mean(argument3, argument0);
      enigma::varaccess_ymean(int(self))= mean(argument4, argument1);
      draw_set_color(argument7);
      d3d_primitive_begin_texture(pr_trianglestrip, argument10);
      for(enigma::varaccess_a(int(self))= 0; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self)); enigma::varaccess_a(int(self))+= 1)
      {
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self)), 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self)), 0);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* argument8, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* argument8, (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self))+ 1)/ (double) enigma::varaccess_sides(int(self)), 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* argument8, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* argument8, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument2, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self)), 1);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self))* argument9, (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument5, 0, 0, 1, (enigma::varaccess_a(int(self)))/ (double) enigma::varaccess_sides(int(self)), 0);
        
      }
      d3d_primitive_end();
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_draw_line()
{
  
  {
    var x1, y1, z1, x2, y2, z2, col, alp, lit, litprev;
    x1 = argument0;
    y1 = argument1;
    z1 = argument2;
    x2 = argument3;
    y2 = argument4;
    z2 = argument5;
    col = argument6;
    alp = argument7;
    lit = argument8;
    d3d_set_lighting(lit);
    draw_set_color(col);
    draw_set_alpha(alp);
    d3d_primitive_begin(pr_linelist);
    d3d_vertex(x1, y1, z1);
    d3d_vertex(x2, y2, z2);
    d3d_primitive_end();
    draw_set_alpha(1);
    draw_set_color(c_white);
    d3d_set_lighting(1);
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_draw_regpolyfloor()
{
  with(self)
  {
    
    {
      enigma::varaccess_sides(int(self))= argument5;
      enigma::varaccess_enigmaplus(int(self))= 360 / (double) enigma::varaccess_sides(int(self));
      enigma::varaccess_xrad(int(self))=(argument2 - argument0)/ (double) 2;
      enigma::varaccess_yrad(int(self))=(argument3 - argument1)/ (double) 2;
      enigma::varaccess_xmean(int(self))= mean(argument2, argument0);
      enigma::varaccess_ymean(int(self))= mean(argument3, argument1);
      draw_set_color(argument6);
      d3d_primitive_begin_texture(pr_trianglefan, argument7);
      for(enigma::varaccess_a(int(self))= 0; enigma::varaccess_a(int(self))< enigma::varaccess_sides(int(self)); enigma::varaccess_a(int(self))+= 1)
      {
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* enigma::varaccess_a(int(self))));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument4, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self)))= lengthdir_x(enigma::varaccess_xrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self)))= lengthdir_y(enigma::varaccess_yrad(int(self)), (enigma::varaccess_enigmaplus(int(self))* (enigma::varaccess_a(int(self))+ 1)));
        d3d_vertex_normal_texture(enigma::varaccess_xmean(int(self))+ enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))), enigma::varaccess_ymean(int(self))- enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))), argument4, 0, 0, 1, (enigma::varaccess_xx(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_xrad(int(self))/ (double) 2)+ 0.5, (enigma::varaccess_yy(int(self))(enigma::varaccess_a(int(self))) / (double) enigma::varaccess_yrad(int(self))/ (double) 2)+ 0.5);
        
      }
      d3d_primitive_end();
      draw_set_color(c_white);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_d3d_collision_block()
{
  
  {
    var xx, yy, zz, x1, y1, z1, x2, y2, z2;
    xx = argument0;
    yy = argument1;
    zz = argument2;
    x1 = argument3;
    y1 = argument4;
    z1 = argument5;
    x2 = argument6;
    y2 = argument7;
    z2 = argument8;
    if(xx > x1 and xx < x2 and yy > y1 and yy < y2 and zz < z1 and zz > z2)
    {
      return(1);
      
    }
    else
    {
      return(0);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_draw_sprite_3d()
{
  
  {
    var spr, si, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, tex, alp;
    spr = argument0;
    si = argument1;
    x1 = argument2;
    y1 = argument3;
    z1 = argument4;
    x2 = argument5;
    y2 = argument6;
    z2 = argument7;
    x3 = argument8;
    y3 = argument9;
    z3 = argument10;
    x4 = argument11;
    y4 = argument12;
    z4 = argument13;
    alp = argument14;
    tex = sprite_get_texture(spr, si);
    draw_set_alpha(alp);
    d3d_primitive_begin_texture(pr_trianglefan, tex);
    d3d_vertex_texture(x1, y1, z1, 0, 0);
    d3d_vertex_texture(x2, y2, z2, 1, 0);
    d3d_vertex_texture(x3, y3, z3, 1, 1);
    d3d_vertex_texture(x4, y4, z4, 0, 1);
    draw_set_alpha(1);
    d3d_primitive_end();
    
  }
  ;
  
  return 0;
}

variant _SCR_dif()
{
  
  {
    var val1, val2, _val1, _val2;
    val1 = argument0;
    val2 = argument1;
    _val1 = enigma_max(val1, val2);
    _val2 = enigma_min(val1, val2);
    return(_val1 - _val2);
    
  }
  ;
  
  return 0;
}

variant _SCR_between()
{
  
  {
    var _val, _min, _max;
    _val = argument0;
    _min = argument1;
    _max = argument2;
    if(_val > _min and _val < _max)
    {
      return(1);
      
    }
    else
    {
      return(0);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_string_cap()
{
  with(self)
  {
    if(argument1 == 0)
    {
      enigma::varaccess_text_999i(int(self))= toString(argument0);
      enigma::varaccess_text_999ii(int(self))= string_char_at(enigma::varaccess_text_999i(int(self)), 0);
      enigma::varaccess_text_999ii(int(self))= string_upper(enigma::varaccess_text_999ii(int(self)));
      enigma::varaccess_text_999i(int(self))= string_delete(toString(enigma::varaccess_text_999i(int(self))), 1, 1);
      enigma::varaccess_text_999iii(int(self))= enigma::varaccess_text_999ii(int(self))+ enigma::varaccess_text_999i(int(self));
      return(enigma::varaccess_text_999iii(int(self)));
      
    }
    else
    {
      enigma::varaccess_text_999i(int(self))= toString(argument0);
      enigma::varaccess_text_999ii(int(self))= string_char_at(enigma::varaccess_text_999i(int(self)), argument1);
      enigma::varaccess_text_999ii(int(self))= string_upper(enigma::varaccess_text_999ii(int(self)));
      enigma::varaccess_text_999iii(int(self))= string_delete(enigma::varaccess_text_999i(int(self)), argument1, string_length(enigma::varaccess_text_999i(int(self)))- argument1 + 1);
      enigma::varaccess_text_999iiii(int(self))= string_delete(enigma::varaccess_text_999i(int(self)), 1, argument1);
      enigma::varaccess_text_999iiiii(int(self))= enigma::varaccess_text_999iii(int(self))+ enigma::varaccess_text_999ii(int(self))+ enigma::varaccess_text_999iiii(int(self));
      return(enigma::varaccess_text_999iiiii(int(self)));
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_search_textfile_string()
{
  with(self)
  {
    enigma::varaccess___lines__(int(self))= file_text_nol(argument0);
    enigma::varaccess_in_db2(int(self))= 0;
    enigma::varaccess_file_read(int(self))= file_text_open_read(argument0);
    for(enigma::varaccess_a(int(self))= 0; enigma::varaccess_a(int(self))< enigma::varaccess___lines__(int(self)); enigma::varaccess_a(int(self))+= 1)
    {
      enigma::varaccess_text2_i4(int(self))= string_lower(file_text_read_string(enigma::varaccess_file_read(int(self))));
      if(string_count(string_lower(argument1), enigma::varaccess_text2_i4(int(self)))> 0)
      {
        enigma::varaccess_in_db2(int(self))= 1;
        break;
        
      }
      file_text_readln(enigma::varaccess_file_read(int(self)));
      
    }
    if(enigma::varaccess_in_db2(int(self))== 1)
    {
      return(1);
      
    }
    else
    {
      return(0);
      
    }
    
  }
  ;
  
  return 0;
}

variant _SCR_file_text_nol()
{
  with(self)
  {
    enigma::varaccess___lines__(int(self))= 0;
    enigma::varaccess_file_read(int(self))= file_text_open_read(argument0);
    while(! (file_text_eof(enigma::varaccess_file_read(int(self)))))
    {
      file_text_readln(enigma::varaccess_file_read(int(self)));
      enigma::varaccess___lines__(int(self))+= 1;
      
    }
    file_text_close(enigma::varaccess_file_read(int(self)));
    return(enigma::varaccess___lines__(int(self)));
    
  }
  ;
  
  return 0;
}

namespace enigma
{
  callable_script callable_scripts[] = {
    { (variant(*)())_SCR_d3d_point_distance, 0 },
    { (variant(*)())_SCR_d3d_point_direction, 0 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
    { NULL, -1 },
  };
  
  void constructor(object_basic* instance_b)
  {
    //This is the universal create event code
    object_locals* instance = (object_locals*)instance_b;
    
    instance->xstart = instance->x;
    instance->ystart = instance->y;
    instance->xprevious = instance->x;
    instance->yprevious = instance->y;

    instance->gravity=0;
    instance->gravity_direction=270;
    instance->friction=0;
    
    
    if(instance->sprite_index!=-1)
    {
      instance->sprite_xoffset = sprite_get_xoffset(instance->sprite_index);
      instance->sprite_yoffset = sprite_get_yoffset(instance->sprite_index);
      
      instance->bbox_left    =   sprite_get_bbox_left(instance->sprite_index)   - instance->sprite_xoffset;
      instance->bbox_right   =  sprite_get_bbox_right(instance->sprite_index)   - instance->sprite_xoffset;
      instance->bbox_top     =   sprite_get_bbox_top (instance->sprite_index)   - instance->sprite_yoffset;
      instance->bbox_bottom  =   sprite_get_bbox_bottom(instance->sprite_index) - instance->sprite_xoffset;
      //instance->sprite_height =  sprite_get_height(instance->sprite_index); //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
      //instance->sprite_width  =  sprite_get_width(instance->sprite_index);  //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
      instance->image_number  =  sprite_get_number(instance->sprite_index); //TODO: IMPLEMENT THESE AS AN IMPLICIT ACCESSOR
    }
    
    instance->image_alpha = 1.0;
    instance->image_angle = 0;
    instance->image_blend = 0xFFFFFF;
    instance->image_index = 0;
    instance->image_single = -1;
    instance->image_speed  = 1;
    instance->image_xscale = 1;
    instance->image_yscale = 1;
    
instancecount++;
    instance_count++;
  }
}
