/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

// Depending on how many times your game accesses variables via OBJECT.varname, this file may be empty.

namespace enigma
{
  object_locals ldummy;
  object_locals *glaccess(int x)
  {
    object_locals* ri = (object_locals*)fetch_instance_by_int(x);
    return ri ? ri : &ldummy;
  }

  var dummy_0; // Referenced by 49 accessors
  var  &varaccess_act(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->act;
    }
    return dummy_0;
  }
  var  &varaccess_angle(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->angle;
      case afterimage: return ((OBJ_afterimage*)inst)->angle;
      case movie: return ((OBJ_movie*)inst)->angle;
      case knuckles: return ((OBJ_knuckles*)inst)->angle;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->angle;
      case spike_shield: return ((OBJ_spike_shield*)inst)->angle;
      case snowflake: return ((OBJ_snowflake*)inst)->angle;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->angle;
    }
    return dummy_0;
  }
  var  &varaccess_bonus(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->bonus;
      case afterimage: return ((OBJ_afterimage*)inst)->bonus;
      case city: return ((OBJ_city*)inst)->bonus;
      case movingfloor: return ((OBJ_movingfloor*)inst)->bonus;
      case movie: return ((OBJ_movie*)inst)->bonus;
      case knuckles: return ((OBJ_knuckles*)inst)->bonus;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->bonus;
      case rocky2: return ((OBJ_rocky2*)inst)->bonus;
      case water: return ((OBJ_water*)inst)->bonus;
      case alaska: return ((OBJ_alaska*)inst)->bonus;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->bonus;
    }
    return dummy_0;
  }
  var  &varaccess_broken(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case icewall: return ((OBJ_icewall*)inst)->broken;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->broken;
    }
    return dummy_0;
  }
  var  &varaccess_col(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case afterimage: return ((OBJ_afterimage*)inst)->col;
      case Rail_Canyon: return ((OBJ_Rail_Canyon*)inst)->col;
      case Route_99: return ((OBJ_Route_99*)inst)->col;
      case Special___Stage: return ((OBJ_Special___Stage*)inst)->col;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->col;
      case spike_shield: return ((OBJ_spike_shield*)inst)->col;
      case Alaska: return ((OBJ_Alaska*)inst)->col;
      case object130: return ((OBJ_object130*)inst)->col;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->col;
    }
    return dummy_0;
  }
  var  &varaccess_current_time(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->current_time;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->current_time;
    }
    return dummy_0;
  }
  var  &varaccess_deltaTime(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->deltaTime;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->deltaTime;
    }
    return dummy_0;
  }
  var  &varaccess_enigmawait(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->enigmawait;
      case knuckles: return ((OBJ_knuckles*)inst)->enigmawait;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->enigmawait;
    }
    return dummy_0;
  }
  var  &varaccess_enigmawrite(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->enigmawrite;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->enigmawrite;
    }
    return dummy_0;
  }
  var  &varaccess_fa_center(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Rail_Canyon: return ((OBJ_Rail_Canyon*)inst)->fa_center;
      case Route_99: return ((OBJ_Route_99*)inst)->fa_center;
      case Special___Stage: return ((OBJ_Special___Stage*)inst)->fa_center;
      case Alaska: return ((OBJ_Alaska*)inst)->fa_center;
      case object130: return ((OBJ_object130*)inst)->fa_center;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->fa_center;
    }
    return dummy_0;
  }
  var  &varaccess_fa_middle(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Rail_Canyon: return ((OBJ_Rail_Canyon*)inst)->fa_middle;
      case Route_99: return ((OBJ_Route_99*)inst)->fa_middle;
      case Special___Stage: return ((OBJ_Special___Stage*)inst)->fa_middle;
      case Alaska: return ((OBJ_Alaska*)inst)->fa_middle;
      case speachopening: return ((OBJ_speachopening*)inst)->fa_middle;
      case object130: return ((OBJ_object130*)inst)->fa_middle;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->fa_middle;
    }
    return dummy_0;
  }
  var  &varaccess_fast(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->fast;
      case afterimage: return ((OBJ_afterimage*)inst)->fast;
      case movie: return ((OBJ_movie*)inst)->fast;
      case knuckles: return ((OBJ_knuckles*)inst)->fast;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->fast;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->fast;
    }
    return dummy_0;
  }
  var  &varaccess_fixme_alarm(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->fixme_alarm;
    }
    return dummy_0;
  }
  var  &varaccess_font(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Rail_Canyon: return ((OBJ_Rail_Canyon*)inst)->font;
      case Route_99: return ((OBJ_Route_99*)inst)->font;
      case Special___Stage: return ((OBJ_Special___Stage*)inst)->font;
      case Alaska: return ((OBJ_Alaska*)inst)->font;
      case speachopening: return ((OBJ_speachopening*)inst)->font;
      case object130: return ((OBJ_object130*)inst)->font;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->font;
    }
    return dummy_0;
  }
  var  &varaccess_gamevars(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->gamevars;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->gamevars;
    }
    return dummy_0;
  }
  var  &varaccess_grinding(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->grinding;
      case afterimage: return ((OBJ_afterimage*)inst)->grinding;
      case movie: return ((OBJ_movie*)inst)->grinding;
      case knuckles: return ((OBJ_knuckles*)inst)->grinding;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->grinding;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->grinding;
    }
    return dummy_0;
  }
  var  &varaccess_hspd(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->hspd;
      case knuckles: return ((OBJ_knuckles*)inst)->hspd;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->hspd;
    }
    return dummy_0;
  }
  var  &varaccess_hundred0pad(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->hundred0pad;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->hundred0pad;
    }
    return dummy_0;
  }
  var  &varaccess_hundreds(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->hundreds;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->hundreds;
    }
    return dummy_0;
  }
  var  &varaccess_inair(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->inair;
      case knuckles: return ((OBJ_knuckles*)inst)->inair;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->inair;
    }
    return dummy_0;
  }
  var  &varaccess_jmp(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->jmp;
      case afterimage: return ((OBJ_afterimage*)inst)->jmp;
      case movie: return ((OBJ_movie*)inst)->jmp;
      case knuckles: return ((OBJ_knuckles*)inst)->jmp;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->jmp;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->jmp;
    }
    return dummy_0;
  }
  var  &varaccess_jog(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->jog;
      case afterimage: return ((OBJ_afterimage*)inst)->jog;
      case movie: return ((OBJ_movie*)inst)->jog;
      case knuckles: return ((OBJ_knuckles*)inst)->jog;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->jog;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->jog;
    }
    return dummy_0;
  }
  var  &varaccess_minutes(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->minutes;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->minutes;
    }
    return dummy_0;
  }
  var  &varaccess_n(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case loopbottom: return ((OBJ_loopbottom*)inst)->n;
      case xtralife: return ((OBJ_xtralife*)inst)->n;
      case electricshield: return ((OBJ_electricshield*)inst)->n;
      case object89: return ((OBJ_object89*)inst)->n;
      case spikeshield: return ((OBJ_spikeshield*)inst)->n;
      case fireshield: return ((OBJ_fireshield*)inst)->n;
      case bubbleshield: return ((OBJ_bubbleshield*)inst)->n;
      case railbottomhalf: return ((OBJ_railbottomhalf*)inst)->n;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->n;
    }
    return dummy_0;
  }
  var  &varaccess_nx(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case emerald: return ((OBJ_emerald*)inst)->nx;
      case Rail_Canyon: return ((OBJ_Rail_Canyon*)inst)->nx;
      case Route_99: return ((OBJ_Route_99*)inst)->nx;
      case Special___Stage: return ((OBJ_Special___Stage*)inst)->nx;
      case Alaska: return ((OBJ_Alaska*)inst)->nx;
      case object130: return ((OBJ_object130*)inst)->nx;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->nx;
    }
    return dummy_0;
  }
  var  &varaccess_r(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->r;
      case afterimage: return ((OBJ_afterimage*)inst)->r;
      case movie: return ((OBJ_movie*)inst)->r;
      case knuckles: return ((OBJ_knuckles*)inst)->r;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->r;
      case fire_shield: return ((OBJ_fire_shield*)inst)->r;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->r;
    }
    return dummy_0;
  }
  var  &varaccess_r2n(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->r2n;
    }
    return dummy_0;
  }
  var  &varaccess_radians(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->radians;
      case movie: return ((OBJ_movie*)inst)->radians;
      case knuckles: return ((OBJ_knuckles*)inst)->radians;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->radians;
    }
    return dummy_0;
  }
  var  &varaccess_rings(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->rings;
    }
    return dummy_0;
  }
  var  &varaccess_rn(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->rn;
    }
    return dummy_0;
  }
  var  &varaccess_run(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->run;
      case afterimage: return ((OBJ_afterimage*)inst)->run;
      case movie: return ((OBJ_movie*)inst)->run;
      case knuckles: return ((OBJ_knuckles*)inst)->run;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->run;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->run;
    }
    return dummy_0;
  }
  var  &varaccess_s(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case spike_shield: return ((OBJ_spike_shield*)inst)->s;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->s;
    }
    return dummy_0;
  }
  var  &varaccess_second0pad(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->second0pad;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->second0pad;
    }
    return dummy_0;
  }
  var  &varaccess_seconds(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->seconds;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->seconds;
    }
    return dummy_0;
  }
  var  &varaccess_skid(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->skid;
      case afterimage: return ((OBJ_afterimage*)inst)->skid;
      case movie: return ((OBJ_movie*)inst)->skid;
      case knuckles: return ((OBJ_knuckles*)inst)->skid;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->skid;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->skid;
    }
    return dummy_0;
  }
  var  &varaccess_slep(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->slep;
      case afterimage: return ((OBJ_afterimage*)inst)->slep;
      case movie: return ((OBJ_movie*)inst)->slep;
      case knuckles: return ((OBJ_knuckles*)inst)->slep;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->slep;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->slep;
    }
    return dummy_0;
  }
  var  &varaccess_sp(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->sp;
      case movie: return ((OBJ_movie*)inst)->sp;
      case knuckles: return ((OBJ_knuckles*)inst)->sp;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->sp;
    }
    return dummy_0;
  }
  var  &varaccess_startingTime(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case hud: return ((OBJ_hud*)inst)->startingTime;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->startingTime;
    }
    return dummy_0;
  }
  var  &varaccess_vspd(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->vspd;
      case movie: return ((OBJ_movie*)inst)->vspd;
      case knuckles: return ((OBJ_knuckles*)inst)->vspd;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->vspd;
    }
    return dummy_0;
  }
  var  &varaccess_walk(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case Player: return ((OBJ_Player*)inst)->walk;
      case afterimage: return ((OBJ_afterimage*)inst)->walk;
      case movie: return ((OBJ_movie*)inst)->walk;
      case knuckles: return ((OBJ_knuckles*)inst)->walk;
      case afterimageknux: return ((OBJ_afterimageknux*)inst)->walk;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->walk;
    }
    return dummy_0;
  }
  var  &varaccess_wl(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->wl;
    }
    return dummy_0;
  }
  var  &varaccess_writ2e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ2e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ2e;
    }
    return dummy_0;
  }
  var  &varaccess_writ3e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ3e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ3e;
    }
    return dummy_0;
  }
  var  &varaccess_writ4e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ4e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ4e;
    }
    return dummy_0;
  }
  var  &varaccess_writ5e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ5e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ5e;
    }
    return dummy_0;
  }
  var  &varaccess_writ6e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ6e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ6e;
    }
    return dummy_0;
  }
  var  &varaccess_writ7e(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->writ7e;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->writ7e;
    }
    return dummy_0;
  }
  var  &varaccess_wrote(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case speachopening: return ((OBJ_speachopening*)inst)->wrote;
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->wrote;
    }
    return dummy_0;
  }
  var  &varaccess_zone(int x)
  {
    object_basic *inst = fetch_instance_by_int(x);
    if (inst) switch (inst->object_index)
    {
      case global: return ((ENIGMA_global_structure*)ENIGMA_global_instance)->zone;
    }
    return dummy_0;
  }
} // namespace enigma
