/********************************************************************************\
**                                                                              **
**  Copyright (C) 2008 Josh Ventura                                             **
**                                                                              **
**  This file is a part of the ENIGMA Development Environment.                  **
**                                                                              **
**                                                                              **
**  ENIGMA is free software: you can redistribute it and/or modify it under the **
**  terms of the GNU General Public License as published by the Free Software   **
**  Foundation, version 3 of the license or any later version.                  **
**                                                                              **
**  This application and its source code is distributed AS-IS, WITHOUT ANY      **
**  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   **
**  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       **
**  details.                                                                    **
**                                                                              **
**  You should have recieved a copy of the GNU General Public License along     **
**  with this code. If not, see <http://www.gnu.org/licenses/>                  **
**                                                                              **
**  ENIGMA is an environment designed to create games and other programs with a **
**  high-level, fully compilable language. Developers of ENIGMA or anything     **
**  associated with ENIGMA are in no way responsible for its users or           **
**  applications created by its users, or damages caused by the environment     **
**  or programs made in the environment.                                        **
**                                                                              **
\********************************************************************************/

//This file was generated by the ENIGMA Development Environment.
//Editing it is a sign of a certain medical condition. We're not sure which one.

#include "../Universal_System/collisions_object.h"

// Script identifiers
const int d3d_point_distance = 0;
const int d3d_point_direction = 1;
const int d3d_wireframe_draw_cone = 3;
const int d3d_wireframe_draw_cylinder = 4;
const int d3d_wireframe_draw_floor = 5;
const int d3d_wireframe_draw_block = 7;
const int d3d_wireframe_draw_triangle = 8;
const int d3d_wireframe_draw_wall_floor = 9;
const int d3d_draw_pipe = 12;
const int d3d_model_pipe = 13;
const int d3d_draw_cylinder_ext = 14;
const int d3d_draw_line = 15;
const int d3d_draw_regpolyfloor = 18;
const int d3d_collision_block = 19;
const int draw_sprite_3d = 20;
const int dif = 21;
const int between = 22;
const int string_cap = 23;
const int search_textfile_string = 24;
const int file_text_nol = 25;

#define d3d_point_distance(arguments...) _SCR_d3d_point_distance(arguments)
#define d3d_point_direction(arguments...) _SCR_d3d_point_direction(arguments)
#define d3d_wireframe_draw_cone(arguments...) _SCR_d3d_wireframe_draw_cone(arguments)
#define d3d_wireframe_draw_cylinder(arguments...) _SCR_d3d_wireframe_draw_cylinder(arguments)
#define d3d_wireframe_draw_floor(arguments...) _SCR_d3d_wireframe_draw_floor(arguments)
#define d3d_wireframe_draw_block(arguments...) _SCR_d3d_wireframe_draw_block(arguments)
#define d3d_wireframe_draw_triangle(arguments...) _SCR_d3d_wireframe_draw_triangle(arguments)
#define d3d_wireframe_draw_wall_floor(arguments...) _SCR_d3d_wireframe_draw_wall_floor(arguments)
#define d3d_draw_pipe(arguments...) _SCR_d3d_draw_pipe(arguments)
#define d3d_model_pipe(arguments...) _SCR_d3d_model_pipe(arguments)
#define d3d_draw_cylinder_ext(arguments...) _SCR_d3d_draw_cylinder_ext(arguments)
#define d3d_draw_line(arguments...) _SCR_d3d_draw_line(arguments)
#define d3d_draw_regpolyfloor(arguments...) _SCR_d3d_draw_regpolyfloor(arguments)
#define d3d_collision_block(arguments...) _SCR_d3d_collision_block(arguments)
#define draw_sprite_3d(arguments...) _SCR_draw_sprite_3d(arguments)
#define dif(arguments...) _SCR_dif(arguments)
#define between(arguments...) _SCR_between(arguments)
#define string_cap(arguments...) _SCR_string_cap(arguments)
#define search_textfile_string(arguments...) _SCR_search_textfile_string(arguments)
#define file_text_nol(arguments...) _SCR_file_text_nol(arguments)


variant _SCR_d3d_point_distance();
variant _SCR_d3d_point_direction();
variant _SCR_d3d_wireframe_draw_cone();
variant _SCR_d3d_wireframe_draw_cylinder();
variant _SCR_d3d_wireframe_draw_floor();
variant _SCR_d3d_wireframe_draw_block();
variant _SCR_d3d_wireframe_draw_triangle();
variant _SCR_d3d_wireframe_draw_wall_floor();
variant _SCR_d3d_draw_pipe();
variant _SCR_d3d_model_pipe();
variant _SCR_d3d_draw_cylinder_ext();
variant _SCR_d3d_draw_line();
variant _SCR_d3d_draw_regpolyfloor();
variant _SCR_d3d_collision_block();
variant _SCR_draw_sprite_3d();
variant _SCR_dif();
variant _SCR_between();
variant _SCR_string_cap();
variant _SCR_search_textfile_string();
variant _SCR_file_text_nol();

namespace enigma
{
  struct object_locals: event_parent, virtual extension_alarm
  {
    #include "../Preprocessor_Environment_Editable/IDE_EDIT_inherited_locals.h"

    object_locals() {}
    object_locals(unsigned x, int y): event_parent(x,y) {}
  };
}
